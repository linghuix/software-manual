# Save by XLH on 2020_01_10-17.37.21; build 2016 2015_09_25-04.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.openAuxMdb(pathName=
    'E:/101-WorkShop/simulation/Abaqus/tortuls/Abaqus/10.2.cae')
mdb.copyAuxMdbModel(fromName='Model-1', toName='Model-1')
mdb.copyAuxMdbModel(fromName='Model-1', toName='Model-1')
mdb.closeAuxMdb()
mdb.openAuxMdb(pathName=
    'E:/101-WorkShop/simulation/Abaqus/tortuls/Abaqus/11.5.cae')
mdb.copyAuxMdbModel(fromName='Model-1', toName='Model-1')
mdb.copyAuxMdbModel(fromName='Model-1', toName='Model-1')
mdb.closeAuxMdb()
mdb.openAuxMdb(pathName=
    'E:/101-WorkShop/simulation/Abaqus/tortuls/Abaqus/9.3.cae')
mdb.copyAuxMdbModel(fromName='Model-1', toName='Model-1')
mdb.copyAuxMdbModel(fromName='Model-1', toName='Model-1')
mdb.closeAuxMdb()
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'E:\\101-WorkShop\\simulation\\Abaqus\\hit\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 17168, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 40.0})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 5 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_5_1_1_1_1.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 5 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_5_1_1_2_1.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 6 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_6_1_1_3_1.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 5 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_5_1_1_3_1.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 4 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_4_1_1_3_1.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 3 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_3_1_1_3_1.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 2 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_2_1_1_3_1.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 1 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_1_1_1_3_1.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 6 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_6_1_1_4_1.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 5 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_5_1_1_4_1.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 4 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_4_1_1_4_1.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 3 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_3_1_1_4_1.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 2 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_2_1_1_4_1.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 1 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_1_1_1_4_1.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 1U', 
    'timeIncrement': 0.1, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 4, 'phase': STANDARD_PHASE, 
    'equilibrium': 4})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 5 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_5_1_1_1_2.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 5 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_5_1_1_2_2.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 6 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_6_1_1_3_2.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 5 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_5_1_1_3_2.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 4 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_4_1_1_3_2.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 3 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_3_1_1_3_2.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 2 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_2_1_1_3_2.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 1 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_1_1_1_3_2.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 6 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_6_1_1_4_2.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 5 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_5_1_1_4_2.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 4 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_4_1_1_4_2.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 3 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_3_1_1_4_2.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 2 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_2_1_1_4_2.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 1 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_1_1_1_4_2.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 2U', 
    'timeIncrement': 0.025, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 4, 'phase': STANDARD_PHASE, 
    'equilibrium': 4})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 5 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_5_1_1_1_3.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 5 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_5_1_1_2_3.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 6 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_6_1_1_3_3.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 5 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_5_1_1_3_3.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 4 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_4_1_1_3_3.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 3 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_3_1_1_3_3.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 2 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_2_1_1_3_3.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 1 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_1_1_1_3_3.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 5 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_5_1_1_4_3.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 4 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_4_1_1_4_3.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 3 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_3_1_1_4_3.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 2 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_2_1_1_4_3.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 1 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_1_1_1_4_3.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 3U', 
    'timeIncrement': 0.00625, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 4, 'phase': STANDARD_PHASE, 
    'equilibrium': 4})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 5 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_5_1_1_1_4.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 5 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_5_1_1_2_4.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 6 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_6_1_1_3_4.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 5 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_5_1_1_3_4.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 4 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_4_1_1_3_4.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 3 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_3_1_1_3_4.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 2 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_2_1_1_3_4.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Zero pivot when processing D.O.F. 1 at one or more of the internal nodes of 1 elements. The elements have been identified in element set WarnElemSolvProbZeroPiv_1_1_1_3_4.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0015625, 'attempts': 4, 
    'timeIncrement': 0.0015625, 'increment': 1, 'stepTime': 0.0015625, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0015625, 'attempts': ' 1U', 
    'timeIncrement': 0.0015625, 'increment': 2, 'stepTime': 0.0015625, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0015625, 'attempts': ' 2U', 
    'timeIncrement': 0.000390625, 'increment': 2, 'stepTime': 0.0015625, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 5, 
    'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0015625, 'attempts': ' 3U', 
    'timeIncrement': 9.765625e-05, 'increment': 2, 'stepTime': 0.0015625, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0015625, 'attempts': ' 4U', 
    'timeIncrement': 2.44140625e-05, 'increment': 2, 'stepTime': 0.0015625, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0015625, 'attempts': ' 5U', 
    'timeIncrement': 6.103515625e-06, 'increment': 2, 'stepTime': 0.0015625, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job-1']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'Too many attempts made for this increment', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0015625, 'attempts': 6, 
    'timeIncrement': 1e-35, 'increment': 2, 'stepTime': 0.0015625, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 4, 'phase': STANDARD_PHASE, 
    'equilibrium': 4})
mdb.jobs['Job-1']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'THE ANALYSIS HAS BEEN TERMINATED DUE TO PREVIOUS ERRORS. ALL OUTPUT REQUESTS HAVE BEEN WRITTEN FOR THE LAST CONVERGED INCREMENT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.openAuxMdb(pathName=
    'E:/101-WorkShop/simulation/Abaqus/tortuls/Abaqus/8.3.cae')
mdb.copyAuxMdbModel(fromName='Model-1', toName='Model-1')
mdb.copyAuxMdbModel(fromName='Model-1', toName='Model-1')
mdb.closeAuxMdb()
mdb.openAuxMdb(pathName=
    'E:/101-WorkShop/simulation/Abaqus/tortuls/Abaqus/8.2.cae')
mdb.copyAuxMdbModel(fromName='Model-1', toName='Model-1')
mdb.copyAuxMdbModel(fromName='Model-1', toName='Model-1')
mdb.closeAuxMdb()
mdb.openAuxMdb(pathName=
    'E:/101-WorkShop/simulation/Abaqus/tortuls/Abaqus/7.4.cae')
mdb.copyAuxMdbModel(fromName='Model-1', toName='Model-1')
mdb.copyAuxMdbModel(fromName='Model-1', toName='Model-1')
mdb.closeAuxMdb()
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 3496, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Boundary conditions are defined at the nodes contained in node set WarnNodeBcIntersectKinCon. In addition the nodes are also part of a surface involved in kinematic contact. The kinematic contact constraint will be overridden by the boundary conditions in case of a conflict. Penalty contact may be used instead.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 16808, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.49603121002428e-08, 'stepTime': 0.0, 
    'totalEnergy': 6.72038793563843, 'cpuTime': 0.0, 'jobName': 'Job-1', 
    'step': 1, 'increment': 0, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 6.72038793563843})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The slave surface nodes in node set WarnNodeMassRatio3fix-Step1 have much larger masses than the nodes on the master surface. Significant contact noise may result. Suggested workarounds include setting the WEIGHT parameter so that what was the master surface becomes a pure slave surface in the contact pair, using mass-scaling to adjust the ratio of nodal masses, or using the penalty contact algorithm. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.000125026170280762, 
    'stableTimeIncrement': 3.55417490993659e-08, 
    'stepTime': 0.000125026170280762, 'totalEnergy': 6.71969079971313, 
    'cpuTime': 7.90000009536743, 'jobName': 'Job-1', 'step': 1, 
    'increment': 3524, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 4.8000340461731})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.000250005512498319, 
    'stableTimeIncrement': 3.55417490993659e-08, 
    'stepTime': 0.000250005512498319, 'totalEnergy': 6.71968412399292, 
    'cpuTime': 15.6999998092651, 'jobName': 'Job-1', 'step': 1, 
    'increment': 7041, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 4.47462034225464})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.000375020375940949, 
    'stableTimeIncrement': 3.55417490993659e-08, 
    'stepTime': 0.000375020375940949, 'totalEnergy': 6.71965408325195, 
    'cpuTime': 23.6000003814697, 'jobName': 'Job-1', 'step': 1, 
    'increment': 10559, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 4.7667179107666})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.000500009278766811, 
    'stableTimeIncrement': 3.55417490993659e-08, 
    'stepTime': 0.000500009278766811, 'totalEnergy': 6.71964645385742, 
    'cpuTime': 31.3999996185303, 'jobName': 'Job-1', 'step': 1, 
    'increment': 14076, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 4.52780771255493})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.000625019834842533, 
    'stableTimeIncrement': 3.55414542241306e-08, 
    'stepTime': 0.000625019834842533, 'totalEnergy': 6.71964406967163, 
    'cpuTime': 39.2000007629395, 'jobName': 'Job-1', 'step': 1, 
    'increment': 17591, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 4.67206811904907})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.000750030390918255, 
    'stableTimeIncrement': 3.55416780450923e-08, 
    'stepTime': 0.000750030390918255, 'totalEnergy': 6.71964406967163, 
    'cpuTime': 47.0, 'jobName': 'Job-1', 'step': 1, 'increment': 21106, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 4.6183066368103})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.000875005382113159, 
    'stableTimeIncrement': 3.55414435659895e-08, 
    'stepTime': 0.000875005382113159, 'totalEnergy': 6.71964359283447, 
    'cpuTime': 54.7000007629395, 'jobName': 'Job-1', 'step': 1, 
    'increment': 24620, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 4.5659065246582})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0010000130860135, 
    'stableTimeIncrement': 3.55414755404126e-08, 
    'stepTime': 0.0010000130860135, 'totalEnergy': 6.71964311599731, 
    'cpuTime': 62.2999992370605, 'jobName': 'Job-1', 'step': 1, 
    'increment': 28136, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 4.6998085975647})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00112503208220005, 
    'stableTimeIncrement': 3.55415679109683e-08, 
    'stepTime': 0.00112503208220005, 'totalEnergy': 6.71964406967163, 
    'cpuTime': 70.0, 'jobName': 'Job-1', 'step': 1, 'increment': 31657, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 4.48613548278809})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00125001557171345, 
    'stableTimeIncrement': 3.55409746077839e-08, 
    'stepTime': 0.00125001557171345, 'totalEnergy': 6.71964311599731, 
    'cpuTime': 77.6999969482422, 'jobName': 'Job-1', 'step': 1, 
    'increment': 35177, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 4.73467588424683})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0013750345679, 
    'stableTimeIncrement': 3.55412765884466e-08, 'stepTime': 0.0013750345679, 
    'totalEnergy': 6.71964359283447, 'cpuTime': 85.3000030517578, 
    'jobName': 'Job-1', 'step': 1, 'increment': 38698, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 4.47689056396484})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0015000180574134, 
    'stableTimeIncrement': 3.5541095400049e-08, 'stepTime': 0.0015000180574134, 
    'totalEnergy': 6.71964311599731, 'cpuTime': 93.1999969482422, 
    'jobName': 'Job-1', 'step': 1, 'increment': 42218, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 4.69243001937866})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0016250015469268, 
    'stableTimeIncrement': 3.5541283693874e-08, 'stepTime': 0.0016250015469268, 
    'totalEnergy': 6.71964359283447, 'cpuTime': 101.0, 'jobName': 'Job-1', 
    'step': 1, 'increment': 45738, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 4.53633594512939})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00175002054311335, 
    'stableTimeIncrement': 3.55411238217584e-08, 
    'stepTime': 0.00175002054311335, 'totalEnergy': 6.71964311599731, 
    'cpuTime': 108.800003051758, 'jobName': 'Job-1', 'step': 1, 
    'increment': 49259, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 4.59984827041626})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00187500403262675, 
    'stableTimeIncrement': 3.55410278984891e-08, 
    'stepTime': 0.00187500403262675, 'totalEnergy': 6.71964263916016, 
    'cpuTime': 116.599998474121, 'jobName': 'Job-1', 'step': 1, 
    'increment': 52779, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 4.62187051773071})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00200003432109952, 
    'stableTimeIncrement': 3.55414009334254e-08, 
    'stepTime': 0.00200003432109952, 'totalEnergy': 6.71964263916016, 
    'cpuTime': 124.5, 'jobName': 'Job-1', 'step': 1, 'increment': 56296, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 4.51329660415649})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.002125000115484, 
    'stableTimeIncrement': 3.5541383169857e-08, 'stepTime': 0.002125000115484, 
    'totalEnergy': 6.71964168548584, 'cpuTime': 132.199996948242, 
    'jobName': 'Job-1', 'step': 1, 'increment': 59804, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 4.67213821411133})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 17, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00225000153295696, 
    'stableTimeIncrement': 3.5541372511716e-08, 
    'stepTime': 0.00225000153295696, 'totalEnergy': 6.719642162323, 
    'cpuTime': 140.0, 'jobName': 'Job-1', 'step': 1, 'increment': 63313, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 4.47543048858643})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 18, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00237500295042992, 
    'stableTimeIncrement': 3.55414186969938e-08, 
    'stepTime': 0.00237500295042992, 'totalEnergy': 6.71964120864868, 
    'cpuTime': 147.800003051758, 'jobName': 'Job-1', 'step': 1, 
    'increment': 66822, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 4.68131351470947})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 19, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00249999994412065, 
    'stableTimeIncrement': 3.55414009334254e-08, 
    'stepTime': 0.00249999994412065, 'totalEnergy': 6.71964168548584, 
    'cpuTime': 155.5, 'jobName': 'Job-1', 'step': 1, 'increment': 70331, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 4.47447919845581})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 20, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': EXPLICIT_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Fri Jan 10 17:49:31 2020', 
    'jobName': 'Job-1'})
# Save by XLH on 2020_01_10-17.52.43; build 2016 2015_09_25-04.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].steps['Step-1'].setValues(timePeriod=0.01)
del mdb.models['Model-1'].predefinedFields['Predefined Field-1']
# Save by XLH on 2020_01_10-18.02.18; build 2016 2015_09_25-04.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-qiu'].features['Solid revolve-1'].sketch)
mdb.models['Model-1'].parts['Part-qiu'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-qiu'].features['Solid revolve-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-qiu'].features['Solid revolve-1'].sketch)
mdb.models['Model-1'].parts['Part-qiu'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-qiu'].features['Solid revolve-1'])
mdb.models['Model-1'].sketches['__edit__'].autoDimension(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[2], ))
mdb.models['Model-1'].sketches['__edit__'].autoDimension(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[5], ))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].RadialDimension(curve=
    mdb.models['Model-1'].sketches['__edit__'].geometry[5], radius=30.0, 
    textPoint=(1.47600436210632, 6.33858966827393))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[2], ))
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -0.638135433197021, 8.49911499023438), value=30.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1])
mdb.models['Model-1'].sketches['__edit__'].move(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[5], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[4]), vector=(0.0, 
    -10.0))
mdb.models['Model-1'].sketches['__edit__'].ConstructionLine(point1=(0.0, 25.0), 
    point2=(0.0, 1.88997173309326))
mdb.models['Model-1'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[6])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-ban'].features['Solid revolve-1'].sketch)
mdb.models['Model-1'].parts['Part-ban'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-ban'].features['Solid revolve-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    43.8423767089844, -4.37677764892578), value=3.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    15.4024562835693, 3.61426305770874), value=100.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2])
mdb.models['Model-1'].sketches['__edit__'].move(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[3], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[4], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[6], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[4], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[5], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[6]), vector=(60.0, 
    0.0))
mdb.models['Model-1'].parts['Part-ban'].features['Solid revolve-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Part-ban'].regenerate()
mdb.models['Model-1'].Material(name='Material-2')
mdb.models['Model-1'].materials['Material-2'].Density(table=((1400000.0, ), ))
mdb.models['Model-1'].materials['Material-2'].density.setValues(table=((1400.0, 
    ), ))
del mdb.models['Model-1'].materials['Material-1'].density
mdb.models['Model-1'].materials.changeKey(fromName='Material-1', toName=
    'Steel')
mdb.models['Model-1'].materials.changeKey(fromName='Material-2', toName=
    'Plastic')
mdb.models['Model-1'].HomogeneousSolidSection(material='Plastic', name=
    'solid_1', thickness=None)
mdb.models['Model-1'].sections['Section-1'].setValues(material='Steel', 
    thickness=None)
mdb.models['Model-1'].sections.changeKey(fromName='Section-1', toName=
    'solid_2')
mdb.models['Model-1'].parts['Part-qiu'].sectionAssignments[0].setValues(
    sectionName='solid_1')
mdb.models['Model-1'].parts['Part-ban'].sectionAssignments[0].setValues(
    sectionName='solid_2')
# Save by XLH on 2020_01_10-18.20.14; build 2016 2015_09_25-04.31.09 126547
# Save by XLH on 2020_01_10-18.20.15; build 2016 2015_09_25-04.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-qiu-1', ), 
    vector=(0.0, 0.0, 100.0))
# Save by XLH on 2020_01_10-18.22.21; build 2016 2015_09_25-04.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-qiu-1', ), 
    vector=(0.0, 0.0, -100.0))
# Save by XLH on 2020_01_10-18.23.14; build 2016 2015_09_25-04.31.09 126547
# Save by XLH on 2020_01_10-18.23.48; build 2016 2015_09_25-04.31.09 126547
# Save by XLH on 2020_01_10-18.24.57; build 2016 2015_09_25-04.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.models['Model-1'].steps['Step-1']
mdb.models['Model-1'].ExplicitDynamicsStep(name='Step-1', previous='Initial', 
    timePeriod=0.01)
mdb.models['Model-1'].Velocity(distributionType=MAGNITUDE, field='', name=
    'Predefined Field-1', omega=0.0, region=
    mdb.models['Model-1'].rootAssembly.sets['Set-qiu'], velocity1=0.0, 
    velocity2=-30.0, velocity3=0.0)
del mdb.models['Model-1'].predefinedFields['Predefined Field-1']
mdb.models['Model-1'].steps['Step-1'].setValues(timePeriod=0.001)
del mdb.models['Model-1'].steps['Step-1']
mdb.models['Model-1'].TempDisplacementDynamicsStep(name='Step-1', previous=
    'Initial', timePeriod=0.01)
mdb.models['Model-1'].ExplicitDynamicsStep(name='Step-2', previous='Step-1', 
    timePeriod=0.0001)
del mdb.models['Model-1'].steps['Step-2']
del mdb.models['Model-1'].steps['Step-1']
mdb.models['Model-1'].Velocity(distributionType=MAGNITUDE, field='', name=
    'Predefined Field-1', omega=0.0, region=
    mdb.models['Model-1'].rootAssembly.instances['Part-qiu-1'].sets['Set-1'], 
    velocity1=0.0, velocity2=-30.0, velocity3=0.0)
del mdb.models['Model-1'].predefinedFields['Predefined Field-1']
mdb.models['Model-1'].TempDisplacementDynamicsStep(name='Step-1', previous=
    'Initial', timePeriod=0.0001)
# Save by XLH on 2020_01_10-18.34.35; build 2016 2015_09_25-04.31.09 126547
# Save by XLH on 2020_01_10-18.34.36; build 2016 2015_09_25-04.31.09 126547
# Save by XLH on 2020_01_10-18.34.36; build 2016 2015_09_25-04.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].SurfaceToSurfaceContactExp(clearanceRegion=None, 
    createStepName='Step-1', datumAxis=None, initialClearance=OMIT, 
    interactionProperty='IntProp-1', master=
    mdb.models['Model-1'].rootAssembly.surfaces['Surf-ban'], 
    mechanicalConstraint=KINEMATIC, name='Int-1', slave=
    mdb.models['Model-1'].rootAssembly.surfaces['Surf-qiu'], sliding=FINITE)
mdb.models['Model-1'].boundaryConditions['BC-Fix'].deactivate('Step-1')
mdb.models['Model-1'].boundaryConditions['BC-Fix'].reset('Step-1')
del mdb.models['Model-1'].steps['Step-1']
mdb.models['Model-1'].StaticStep(name='Step-1', previous='Initial')
mdb.models['Model-1'].EncastreBC(createStepName='Initial', localCsys=None, 
    name='BC-3', region=
    mdb.models['Model-1'].rootAssembly.instances['Part-qiu-1'].sets['Set-1'])
mdb.models['Model-1'].boundaryConditions['BC-3'].deactivate('Step-1')
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-4', region=
    mdb.models['Model-1'].rootAssembly.instances['Part-qiu-1'].sets['Set-1'], 
    u1=UNSET, u2=-1e-07, u3=UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
del mdb.models['Model-1'].steps['Step-1']
mdb.models['Model-1'].ExplicitDynamicsStep(name='Step-1', previous='Initial', 
    timePeriod=0.006)
del mdb.jobs['Job-1']
mdb.models['Model-1'].boundaryConditions['BC-3'].deactivate('Step-1')
# Save by XLH on 2020_01_10-18.54.12; build 2016 2015_09_25-04.31.09 126547
# Save by XLH on 2020_01_10-18.54.12; build 2016 2015_09_25-04.31.09 126547
# Save by XLH on 2020_01_10-18.54.12; build 2016 2015_09_25-04.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].VelocityBC(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, fieldName='', localCsys=None, name='BC-4', 
    region=
    mdb.models['Model-1'].rootAssembly.instances['Part-qiu-1'].sets['Set-1'], 
    v1=UNSET, v2=-30.0, v3=UNSET, vr1=UNSET, vr2=UNSET, vr3=UNSET)
mdb.models['Model-1'].SurfaceToSurfaceContactExp(clearanceRegion=None, 
    createStepName='Step-1', datumAxis=None, initialClearance=OMIT, 
    interactionProperty='IntProp-1', master=
    mdb.models['Model-1'].rootAssembly.surfaces['Surf-qiu'], 
    mechanicalConstraint=KINEMATIC, name='Int-1', slave=
    mdb.models['Model-1'].rootAssembly.surfaces['Surf-ban'], sliding=FINITE)
mdb.Job(activateLoadBalancing=False, atTime=None, contactPrint=OFF, 
    description='', echoPrint=OFF, explicitPrecision=SINGLE, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1', nodalOutputPrecision=SINGLE, 
    numCpus=1, numDomains=1, parallelizationMethodExplicit=DOMAIN, queue=None, 
    resultsFormat=ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=
    0, waitMinutes=0)
mdb.models['Model-1'].steps['Step-1'].setValues(timePeriod=0.01)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-1.inp", line 7956: Unknown assembly node set SET-FIX', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-1.inp", line 7979: Unknown assembly node set SET-FIX', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '*DENSITY REQUIRES THE USE OF *USER MATERIAL, *ELASTIC, *EOS, *HYPERELASTIC, *ANISOTROPIC HYPERELASTIC, *HYPERFOAM, *LOW DENSITY FOAM OR *FABRIC', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '3584 elements are missing elastic property reference. The elements have been identified in element set ErrElemMissingElasticPropRef.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY_SET-FIX BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY_SET-FIX BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'BOUNDARY CONDITIONS ON DEGREES OF FREEDOM CONSTRAINED BY A TYPE BOUNDARY CONDITION ARE BEING REDEFINED ON AN INDIVIDUAL DEGREE OF FREEDOM BASIS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'CONTACT PAIR REFERENCES SURFACE/NODE-BASED SURFACE/ANALYTICAL RIGID SURFACE ASSEMBLY_SURF-BAN BUT THIS SURFACE/NODE-BASED SURFACE/ANALYTICAL RIGID SURFACE HAS NOT BEEN DEFINED OR THIS SURFACE IS DEFINED ON THE COLLAPSED FACES', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-FIX HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'E:\\101-WorkShop\\simulation\\Abaqus\\hit\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].parts['Part-ban'].setElementType(elemTypes=(ElemType(
    elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD)), 
    regions=(mdb.models['Model-1'].parts['Part-ban'].cells.getSequenceFromMask(
    ('[#3 ]', ), ), ))
mdb.models['Model-1'].parts['Part-ban'].setElementType(elemTypes=(ElemType(
    elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD)), 
    regions=(mdb.models['Model-1'].parts['Part-ban'].cells.getSequenceFromMask(
    ('[#3 ]', ), ), ))
mdb.models['Model-1'].parts['Part-ban'].seedEdgeByNumber(constraint=FINER, 
    edges=mdb.models['Model-1'].parts['Part-ban'].edges.getSequenceFromMask((
    '[#741 ]', ), ), number=50)
mdb.models['Model-1'].parts['Part-ban'].seedEdgeByNumber(constraint=FINER, 
    edges=mdb.models['Model-1'].parts['Part-ban'].edges.getSequenceFromMask((
    '[#8 ]', ), ), number=4)
mdb.models['Model-1'].parts['Part-ban'].generateMesh()
# Save by XLH on 2020_01_10-19.08.57; build 2016 2015_09_25-04.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'ELEMENT TYPE C3D20R IS NOT AVAILABLE IN Abaqus/Explicit', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '*DENSITY REQUIRES THE USE OF *USER MATERIAL, *ELASTIC, *EOS, *HYPERELASTIC, *ANISOTROPIC HYPERELASTIC, *HYPERFOAM, *LOW DENSITY FOAM OR *FABRIC', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '3584 elements are missing elastic property reference. The elements have been identified in element set ErrElemMissingElasticPropRef.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '7 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'SIDE LABEL S4 CANNOT BE USED WITH ELEMENT TYPE C3D20R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'SIDE LABEL S3 CANNOT BE USED WITH ELEMENT TYPE C3D20R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'SIDE LABEL S2 CANNOT BE USED WITH ELEMENT TYPE C3D20R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'BOUNDARY CONDITIONS ON DEGREES OF FREEDOM CONSTRAINED BY A TYPE BOUNDARY CONDITION ARE BEING REDEFINED ON AN INDIVIDUAL DEGREE OF FREEDOM BASIS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'CONTACT PAIR REFERENCES SURFACE/NODE-BASED SURFACE/ANALYTICAL RIGID SURFACE ASSEMBLY_SURF-BAN BUT THIS SURFACE/NODE-BASED SURFACE/ANALYTICAL RIGID SURFACE CANNOT BE USED WITH *CONTACT PAIR. CHECK PREVIOUS WARNING MESSAGES FOR THIS SURFACE TO FIND THE CAUSE.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'E:\\101-WorkShop\\simulation\\Abaqus\\hit\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].parts['Part-ban'].setElementType(elemTypes=(ElemType(
    elemCode=C3D8R, elemLibrary=STANDARD, secondOrderAccuracy=OFF, 
    kinematicSplit=AVERAGE_STRAIN, hourglassControl=DEFAULT, 
    distortionControl=DEFAULT), ElemType(elemCode=C3D6, elemLibrary=STANDARD), 
    ElemType(elemCode=C3D4, elemLibrary=STANDARD)), regions=(
    mdb.models['Model-1'].parts['Part-ban'].cells.getSequenceFromMask(('[#3 ]', 
    ), ), ))
mdb.models['Model-1'].parts['Part-ban'].generateMesh()
# Save by XLH on 2020_01_10-19.10.16; build 2016 2015_09_25-04.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
del mdb.jobs['Job-1']
mdb.Job(activateLoadBalancing=False, atTime=None, contactPrint=OFF, 
    description='', echoPrint=OFF, explicitPrecision=SINGLE, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1', nodalOutputPrecision=SINGLE, 
    numCpus=1, numDomains=1, parallelizationMethodExplicit=DOMAIN, queue=None, 
    resultsFormat=ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=
    0, waitMinutes=0)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '*DENSITY REQUIRES THE USE OF *USER MATERIAL, *ELASTIC, *EOS, *HYPERELASTIC, *ANISOTROPIC HYPERELASTIC, *HYPERFOAM, *LOW DENSITY FOAM OR *FABRIC', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '3584 elements are missing elastic property reference. The elements have been identified in element set ErrElemMissingElasticPropRef.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'BOUNDARY CONDITIONS ON DEGREES OF FREEDOM CONSTRAINED BY A TYPE BOUNDARY CONDITION ARE BEING REDEFINED ON AN INDIVIDUAL DEGREE OF FREEDOM BASIS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'E:\\101-WorkShop\\simulation\\Abaqus\\hit\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].materials['Plastic'].Elastic(table=((3000000000.0, 
    0.319), ))
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'BOUNDARY CONDITIONS ON DEGREES OF FREEDOM CONSTRAINED BY A TYPE BOUNDARY CONDITION ARE BEING REDEFINED ON AN INDIVIDUAL DEGREE OF FREEDOM BASIS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 2144, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 2 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': PACKAGER_PHASE, 
    'message': 'No density has been specified for material STEEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Boundary conditions are defined at the nodes contained in node set WarnNodeBcIntersectKinCon. In addition the nodes are also part of a surface involved in kinematic contact. The kinematic contact constraint will be overridden by the boundary conditions in case of a conflict. Penalty contact may be used instead.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': PACKAGER_PHASE, 
    'message': 'Analysis failed due to Errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].materials['Steel'].Density(table=((7874.0, ), ))
# Save by XLH on 2020_01_10-19.14.42; build 2016 2015_09_25-04.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'BOUNDARY CONDITIONS ON DEGREES OF FREEDOM CONSTRAINED BY A TYPE BOUNDARY CONDITION ARE BEING REDEFINED ON AN INDIVIDUAL DEGREE OF FREEDOM BASIS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 7872, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 2 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Boundary conditions are defined at the nodes contained in node set WarnNodeBcIntersectKinCon. In addition the nodes are also part of a surface involved in kinematic contact. The kinematic contact constraint will be overridden by the boundary conditions in case of a conflict. Penalty contact may be used instead.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 13540, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 5.15180436195806e-05, 'stepTime': 0.0, 
    'totalEnergy': 164236192.0, 'cpuTime': 0.200000002980232, 
    'jobName': 'Job-1', 'step': 1, 'increment': 0, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 164236192.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The slave surface nodes in node set WarnNodeMassRatio3fix-Step1 have much larger masses than the nodes on the master surface. Significant contact noise may result. Suggested workarounds include setting the WEIGHT parameter so that what was the master surface becomes a pure slave surface in the contact pair, using mass-scaling to adjust the ratio of nodal masses, or using the penalty contact algorithm. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.000525484036188573, 
    'stableTimeIncrement': 7.41859912523068e-05, 
    'stepTime': 0.000525484036188573, 'totalEnergy': 161530464.0, 
    'cpuTime': 0.300000011920929, 'jobName': 'Job-1', 'step': 1, 
    'increment': 10, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 166889968.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00104175717569888, 
    'stableTimeIncrement': 0.000123115474707447, 
    'stepTime': 0.00104175717569888, 'totalEnergy': 161522112.0, 
    'cpuTime': 0.300000011920929, 'jobName': 'Job-1', 'step': 1, 
    'increment': 15, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 166902592.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00153420586138964, 
    'stableTimeIncrement': 0.000123106525279582, 
    'stepTime': 0.00153420586138964, 'totalEnergy': 161513952.0, 
    'cpuTime': 0.400000005960464, 'jobName': 'Job-1', 'step': 1, 
    'increment': 19, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 166900864.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00202661869116127, 
    'stableTimeIncrement': 0.000123097794130445, 
    'stepTime': 0.00202661869116127, 'totalEnergy': 161502592.0, 
    'cpuTime': 0.400000005960464, 'jobName': 'Job-1', 'step': 1, 
    'increment': 23, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 166897776.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00251899752765894, 
    'stableTimeIncrement': 0.000123089615954086, 
    'stepTime': 0.00251899752765894, 'totalEnergy': 161486640.0, 
    'cpuTime': 0.400000005960464, 'jobName': 'Job-1', 'step': 1, 
    'increment': 27, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 166899264.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00301134446635842, 
    'stableTimeIncrement': 0.000123082005302422, 
    'stepTime': 0.00301134446635842, 'totalEnergy': 161465808.0, 
    'cpuTime': 0.5, 'jobName': 'Job-1', 'step': 1, 'increment': 31, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 166905776.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00350366136990488, 
    'stableTimeIncrement': 0.000123074845760129, 
    'stepTime': 0.00350366136990488, 'totalEnergy': 161179664.0, 
    'cpuTime': 0.5, 'jobName': 'Job-1', 'step': 1, 'increment': 35, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 167114992.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00411901855841279, 
    'stableTimeIncrement': 0.000123066594824195, 
    'stepTime': 0.00411901855841279, 'totalEnergy': 159340784.0, 
    'cpuTime': 0.5, 'jobName': 'Job-1', 'step': 1, 'increment': 40, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 168539360.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00461127562448382, 
    'stableTimeIncrement': 0.00012306054122746, 
    'stepTime': 0.00461127562448382, 'totalEnergy': 157031904.0, 
    'cpuTime': 0.600000023841858, 'jobName': 'Job-1', 'step': 1, 
    'increment': 44, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 170586944.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0051035089418292, 
    'stableTimeIncrement': 0.000123054749565199, 
    'stepTime': 0.0051035089418292, 'totalEnergy': 155216896.0, 
    'cpuTime': 0.600000023841858, 'jobName': 'Job-1', 'step': 1, 
    'increment': 48, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 172326448.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00559571944177151, 
    'stableTimeIncrement': 0.000123049365356565, 
    'stepTime': 0.00559571944177151, 'totalEnergy': 153877648.0, 
    'cpuTime': 0.600000023841858, 'jobName': 'Job-1', 'step': 1, 
    'increment': 52, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 173630928.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00608790898695588, 
    'stableTimeIncrement': 0.000123044330393896, 
    'stepTime': 0.00608790898695588, 'totalEnergy': 152982608.0, 
    'cpuTime': 0.699999988079071, 'jobName': 'Job-1', 'step': 1, 
    'increment': 56, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 174505056.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0065800785087049, 
    'stableTimeIncrement': 0.000123039164463989, 
    'stepTime': 0.0065800785087049, 'totalEnergy': 152560720.0, 
    'cpuTime': 0.699999988079071, 'jobName': 'Job-1', 'step': 1, 
    'increment': 60, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 174869104.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00707222800701857, 
    'stableTimeIncrement': 0.000123034318676218, 
    'stepTime': 0.00707222800701857, 'totalEnergy': 152495536.0, 
    'cpuTime': 0.699999988079071, 'jobName': 'Job-1', 'step': 1, 
    'increment': 64, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 174804560.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00756435841321945, 
    'stableTimeIncrement': 0.000123030054965056, 
    'stepTime': 0.00756435841321945, 'totalEnergy': 152496176.0, 
    'cpuTime': 0.800000011920929, 'jobName': 'Job-1', 'step': 1, 
    'increment': 68, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 174633152.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00805647391825914, 
    'stableTimeIncrement': 0.000123026926303282, 
    'stepTime': 0.00805647391825914, 'totalEnergy': 152496176.0, 
    'cpuTime': 0.800000011920929, 'jobName': 'Job-1', 'step': 1, 
    'increment': 72, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 174499664.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00854857545346022, 
    'stableTimeIncrement': 0.000123023026390001, 
    'stepTime': 0.00854857545346022, 'totalEnergy': 152496288.0, 
    'cpuTime': 0.899999976158142, 'jobName': 'Job-1', 'step': 1, 
    'increment': 76, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 174386304.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 17, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00903930980712175, 
    'stableTimeIncrement': 0.000123018762678839, 
    'stepTime': 0.00903930980712175, 'totalEnergy': 152496400.0, 
    'cpuTime': 0.899999976158142, 'jobName': 'Job-1', 'step': 1, 
    'increment': 80, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 174262720.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 18, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00952326785773039, 
    'stableTimeIncrement': 0.00012301400420256, 
    'stepTime': 0.00952326785773039, 'totalEnergy': 152496800.0, 
    'cpuTime': 0.899999976158142, 'jobName': 'Job-1', 'step': 1, 
    'increment': 84, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 174130752.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 19, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00999999977648258, 
    'stableTimeIncrement': 0.00012300927483011, 
    'stepTime': 0.00999999977648258, 'totalEnergy': 152496784.0, 
    'cpuTime': 1.0, 'jobName': 'Job-1', 'step': 1, 'increment': 88, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 174031584.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 20, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': EXPLICIT_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Fri Jan 10 19:15:16 2020', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].steps['Step-1'].setValues(maxIncrement=10000.0, 
    timePeriod=1.0)
mdb.models['Model-1'].steps['Step-1'].setValues(timePeriod=2.0)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'BOUNDARY CONDITIONS ON DEGREES OF FREEDOM CONSTRAINED BY A TYPE BOUNDARY CONDITION ARE BEING REDEFINED ON AN INDIVIDUAL DEGREE OF FREEDOM BASIS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 10884, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 2 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Boundary conditions are defined at the nodes contained in node set WarnNodeBcIntersectKinCon. In addition the nodes are also part of a surface involved in kinematic contact. The kinematic contact constraint will be overridden by the boundary conditions in case of a conflict. Penalty contact may be used instead.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 2744, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 5.15180436195806e-05, 'stepTime': 0.0, 
    'totalEnergy': 164236192.0, 'cpuTime': 0.200000002980232, 
    'jobName': 'Job-1', 'step': 1, 'increment': 0, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 164236192.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The slave surface nodes in node set WarnNodeMassRatio3fix-Step1 have much larger masses than the nodes on the master surface. Significant contact noise may result. Suggested workarounds include setting the WEIGHT parameter so that what was the master surface becomes a pure slave surface in the contact pair, using mass-scaling to adjust the ratio of nodal masses, or using the penalty contact algorithm. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'Master surface ASSEMBLY_SURF-BAN of contact pair # 1 contains facets with out-of-plane warping of at least 20.000 degrees in increment 140. Large warping that develops during an analysis often corresponds to severe distortion of the underlying elements. It may be appropriate to rerun the analysis with a refined mesh.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The ratio of deformation speed to wave speed in the elements in element set WarnElemDeformRateExceedsRatio-Step1 exceed the warning ratio.  Refer to the status file for further details. This message is printed during the first applicable increment, but will not be printed during subsequent increments for the remainder of the step.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'The ratio of deformation speed to wave speed exceeds 1.0000 in at least one element. This usually indicates an error with the model definition. Additional diagnostic information may be found in the message file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0863501355051994, 
    'stableTimeIncrement': 9.9999998245167e-15, 'stepTime': 0.0863501355051994, 
    'totalEnergy': -132531400.0, 'cpuTime': 3.90000009536743, 
    'jobName': 'Job-1', 'step': 1, 'increment': 711, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 331986144.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis failed due to Errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].materials['Plastic'].density.setValues(table=((1300.0, ), 
    ))
mdb.models['Model-1'].materials['Plastic'].elastic.setValues(table=((
    2410000000.0, 0.3825), ))
mdb.models['Model-1'].materials['Steel'].elastic.setValues(table=((
    21000000000.0, 0.3), ))
mdb.models['Model-1'].interactions['Int-1'].setValues(clearanceRegion=None, 
    datumAxis=None, initialClearance=OMIT, interactionProperty='IntProp-1', 
    mechanicalConstraint=KINEMATIC, sliding=FINITE)
mdb.models['Model-1'].interactions['Int-1'].swapSurfaces()
mdb.models['Model-1'].steps['Step-1'].setValues(maxIncrement=None)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'BOUNDARY CONDITIONS ON DEGREES OF FREEDOM CONSTRAINED BY A TYPE BOUNDARY CONDITION ARE BEING REDEFINED ON AN INDIVIDUAL DEGREE OF FREEDOM BASIS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 13056, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 2 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Boundary conditions are defined at the nodes contained in node set WarnNodeBcIntersectKinCon. In addition the nodes are also part of a surface involved in kinematic contact. The kinematic contact constraint will be overridden by the boundary conditions in case of a conflict. Penalty contact may be used instead.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 6364, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 4.79804184578825e-05, 'stepTime': 0.0, 
    'totalEnergy': 152505024.0, 'cpuTime': 0.200000002980232, 
    'jobName': 'Job-1', 'step': 1, 'increment': 0, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 152505024.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The slave surface nodes in node set WarnNodeMassRatio3fix-Step1 have much larger masses than the nodes on the master surface. Significant contact noise may result. Suggested workarounds include setting the WEIGHT parameter so that what was the master surface becomes a pure slave surface in the contact pair, using mass-scaling to adjust the ratio of nodal masses, or using the penalty contact algorithm. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.100018322467804, 
    'stableTimeIncrement': 0.000115338814794086, 'stepTime': 0.100018322467804, 
    'totalEnergy': -11915951104.0, 'cpuTime': 4.69999980926514, 
    'jobName': 'Job-1', 'step': 1, 'increment': 873, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 5802953216.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.200007751584053, 
    'stableTimeIncrement': 0.000115303031634539, 'stepTime': 0.200007751584053, 
    'totalEnergy': -30337710080.0, 'cpuTime': 9.10000038146973, 
    'jobName': 'Job-1', 'step': 1, 'increment': 1740, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 13564500992.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.300082057714462, 
    'stableTimeIncrement': 0.000115241862658877, 'stepTime': 0.300082057714462, 
    'totalEnergy': -57504325632.0, 'cpuTime': 13.5, 'jobName': 'Job-1', 
    'step': 1, 'increment': 2608, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 26033442816.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.400088548660278, 
    'stableTimeIncrement': 0.000115170325443614, 'stepTime': 0.400088548660278, 
    'totalEnergy': -93058465792.0, 'cpuTime': 18.0, 'jobName': 'Job-1', 
    'step': 1, 'increment': 3476, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 36293259264.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.500039935112, 
    'stableTimeIncrement': 0.000114862195914611, 'stepTime': 0.500039935112, 
    'totalEnergy': -142162231296.0, 'cpuTime': 22.3999996185303, 
    'jobName': 'Job-1', 'step': 1, 'increment': 4345, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 71803363328.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.600096225738525, 
    'stableTimeIncrement': 0.000114858070446644, 'stepTime': 0.600096225738525, 
    'totalEnergy': -196006019072.0, 'cpuTime': 26.7999992370605, 
    'jobName': 'Job-1', 'step': 1, 'increment': 5216, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 80328278016.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.700047016143799, 
    'stableTimeIncrement': 0.000114492664579302, 'stepTime': 0.700047016143799, 
    'totalEnergy': -259611951104.0, 'cpuTime': 31.2999992370605, 
    'jobName': 'Job-1', 'step': 1, 'increment': 6088, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 56757014528.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.80006992816925, 
    'stableTimeIncrement': 0.000113186368253082, 'stepTime': 0.80006992816925, 
    'totalEnergy': -322931392512.0, 'cpuTime': 35.7999992370605, 
    'jobName': 'Job-1', 'step': 1, 'increment': 6966, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 3504940544.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.900059223175049, 
    'stableTimeIncrement': 0.000111624161945656, 'stepTime': 0.900059223175049, 
    'totalEnergy': -424809332736.0, 'cpuTime': 40.4000015258789, 
    'jobName': 'Job-1', 'step': 1, 'increment': 7851, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 17642645504.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'Master surface ASSEMBLY_SURF-BAN of contact pair # 1 contains facets with out-of-plane warping of at least 20.000 degrees in increment 7900. Large warping that develops during an analysis often corresponds to severe distortion of the underlying elements. It may be appropriate to rerun the analysis with a refined mesh.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'Master surface ASSEMBLY_SURF-QIU of contact pair # 1 contains facets with out-of-plane warping of at least 20.000 degrees in increment 8140. Large warping that develops during an analysis often corresponds to severe distortion of the underlying elements. It may be appropriate to rerun the analysis with a refined mesh.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.00007212162018, 
    'stableTimeIncrement': 0.000101472578535322, 'stepTime': 1.00007212162018, 
    'totalEnergy': -586972790784.0, 'cpuTime': 45.2999992370605, 
    'jobName': 'Job-1', 'step': 1, 'increment': 8779, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 25414037504.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.10005533695221, 
    'stableTimeIncrement': 9.49580717133358e-05, 'stepTime': 1.10005533695221, 
    'totalEnergy': -793577848832.0, 'cpuTime': 50.7000007629395, 
    'jobName': 'Job-1', 'step': 1, 'increment': 9809, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 91612766208.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.20008087158203, 
    'stableTimeIncrement': 9.6111252787523e-05, 'stepTime': 1.20008087158203, 
    'totalEnergy': -1028524343296.0, 'cpuTime': 56.4000015258789, 
    'jobName': 'Job-1', 'step': 1, 'increment': 10859, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 100117643264.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.30004799365997, 
    'stableTimeIncrement': 8.32130972412415e-05, 'stepTime': 1.30004799365997, 
    'totalEnergy': -1287812939776.0, 'cpuTime': 62.4000015258789, 
    'jobName': 'Job-1', 'step': 1, 'increment': 11986, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 26472249344.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The ratio of deformation speed to wave speed in the elements in element set WarnElemDeformRateExceedsRatio-Step1 exceed the warning ratio.  Refer to the status file for further details. This message is printed during the first applicable increment, but will not be printed during subsequent increments for the remainder of the step.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'The ratio of deformation speed to wave speed exceeds 1.0000 in at least one element. This usually indicates an error with the model definition. Additional diagnostic information may be found in the message file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.35389471054077, 
    'stableTimeIncrement': 9.9999998245167e-15, 'stepTime': 1.35389471054077, 
    'totalEnergy': -1445747359744.0, 'cpuTime': 65.9000015258789, 
    'jobName': 'Job-1', 'step': 1, 'increment': 12638, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 44004245504.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis failed due to Errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].steps['Step-1'].setValues(timePeriod=0.8)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'BOUNDARY CONDITIONS ON DEGREES OF FREEDOM CONSTRAINED BY A TYPE BOUNDARY CONDITION ARE BEING REDEFINED ON AN INDIVIDUAL DEGREE OF FREEDOM BASIS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 6272, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 2 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Boundary conditions are defined at the nodes contained in node set WarnNodeBcIntersectKinCon. In addition the nodes are also part of a surface involved in kinematic contact. The kinematic contact constraint will be overridden by the boundary conditions in case of a conflict. Penalty contact may be used instead.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 13572, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 4.79804184578825e-05, 'stepTime': 0.0, 
    'totalEnergy': 152505024.0, 'cpuTime': 0.200000002980232, 
    'jobName': 'Job-1', 'step': 1, 'increment': 0, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 152505024.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The slave surface nodes in node set WarnNodeMassRatio3fix-Step1 have much larger masses than the nodes on the master surface. Significant contact noise may result. Suggested workarounds include setting the WEIGHT parameter so that what was the master surface becomes a pure slave surface in the contact pair, using mass-scaling to adjust the ratio of nodal masses, or using the penalty contact algorithm. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0400363020598888, 
    'stableTimeIncrement': 0.000115403534437064, 
    'stepTime': 0.0400363020598888, 'totalEnergy': -3788838912.0, 
    'cpuTime': 2.0, 'jobName': 'Job-1', 'step': 1, 'increment': 353, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 2019484160.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.080064170062542, 
    'stableTimeIncrement': 0.000115351234853733, 'stepTime': 0.080064170062542, 
    'totalEnergy': -9063960576.0, 'cpuTime': 3.70000004768372, 
    'jobName': 'Job-1', 'step': 1, 'increment': 700, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 4512291840.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.120088338851929, 
    'stableTimeIncrement': 0.000115351169370115, 'stepTime': 0.120088338851929, 
    'totalEnergy': -15005009920.0, 'cpuTime': 5.5, 'jobName': 'Job-1', 
    'step': 1, 'increment': 1047, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 7172360704.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.160112828016281, 
    'stableTimeIncrement': 0.000115268987428863, 'stepTime': 0.160112828016281, 
    'totalEnergy': -22015539200.0, 'cpuTime': 7.30000019073486, 
    'jobName': 'Job-1', 'step': 1, 'increment': 1394, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 10198935552.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.200007751584053, 
    'stableTimeIncrement': 0.000115303031634539, 'stepTime': 0.200007751584053, 
    'totalEnergy': -30337710080.0, 'cpuTime': 9.10000038146973, 
    'jobName': 'Job-1', 'step': 1, 'increment': 1740, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 13564500992.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.240018039941788, 
    'stableTimeIncrement': 0.000115311224362813, 'stepTime': 0.240018039941788, 
    'totalEnergy': -40085782528.0, 'cpuTime': 10.8000001907349, 
    'jobName': 'Job-1', 'step': 1, 'increment': 2087, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 17337495552.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.280025660991669, 
    'stableTimeIncrement': 0.000115278759039938, 'stepTime': 0.280025660991669, 
    'totalEnergy': -51295367168.0, 'cpuTime': 12.6000003814697, 
    'jobName': 'Job-1', 'step': 1, 'increment': 2434, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 22130677760.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.320017963647842, 
    'stableTimeIncrement': 0.000115224022010807, 'stepTime': 0.320017963647842, 
    'totalEnergy': -63485411328.0, 'cpuTime': 14.3999996185303, 
    'jobName': 'Job-1', 'step': 1, 'increment': 2781, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 28802990080.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.360000163316727, 
    'stableTimeIncrement': 0.000115229697257746, 'stepTime': 0.360000163316727, 
    'totalEnergy': -78383390720.0, 'cpuTime': 16.2000007629395, 
    'jobName': 'Job-1', 'step': 1, 'increment': 3128, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 33825726464.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.400088548660278, 
    'stableTimeIncrement': 0.000115170325443614, 'stepTime': 0.400088548660278, 
    'totalEnergy': -93058465792.0, 'cpuTime': 18.0, 'jobName': 'Job-1', 
    'step': 1, 'increment': 3476, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 36293259264.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.440033614635468, 
    'stableTimeIncrement': 0.000115071212348994, 'stepTime': 0.440033614635468, 
    'totalEnergy': -111715532800.0, 'cpuTime': 19.7999992370605, 
    'jobName': 'Job-1', 'step': 1, 'increment': 3823, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 48216514560.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.480042725801468, 
    'stableTimeIncrement': 0.000114863432827406, 'stepTime': 0.480042725801468, 
    'totalEnergy': -132594483200.0, 'cpuTime': 21.6000003814697, 
    'jobName': 'Job-1', 'step': 1, 'increment': 4171, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 66020528128.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.520031690597534, 
    'stableTimeIncrement': 0.000114998874778394, 'stepTime': 0.520031690597534, 
    'totalEnergy': -151661297664.0, 'cpuTime': 23.3999996185303, 
    'jobName': 'Job-1', 'step': 1, 'increment': 4519, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 75174068224.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.560015380382538, 
    'stableTimeIncrement': 0.000114885508082807, 'stepTime': 0.560015380382538, 
    'totalEnergy': -172389056512.0, 'cpuTime': 25.2000007629395, 
    'jobName': 'Job-1', 'step': 1, 'increment': 4867, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 79335088128.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.600096225738525, 
    'stableTimeIncrement': 0.000114858070446644, 'stepTime': 0.600096225738525, 
    'totalEnergy': -196006019072.0, 'cpuTime': 27.0, 'jobName': 'Job-1', 
    'step': 1, 'increment': 5216, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 80328278016.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.640023291110992, 
    'stableTimeIncrement': 0.000114502938231453, 'stepTime': 0.640023291110992, 
    'totalEnergy': -221407887360.0, 'cpuTime': 28.7000007629395, 
    'jobName': 'Job-1', 'step': 1, 'increment': 5564, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 74815741952.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.680017411708832, 
    'stableTimeIncrement': 0.000114825066702906, 'stepTime': 0.680017411708832, 
    'totalEnergy': -246991749120.0, 'cpuTime': 30.5, 'jobName': 'Job-1', 
    'step': 1, 'increment': 5913, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 64937693184.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 17, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.72003972530365, 
    'stableTimeIncrement': 0.000113601177872624, 'stepTime': 0.72003972530365, 
    'totalEnergy': -272176627712.0, 'cpuTime': 32.2999992370605, 
    'jobName': 'Job-1', 'step': 1, 'increment': 6263, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 46344204288.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 18, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.760081827640533, 
    'stableTimeIncrement': 0.000114664282591548, 'stepTime': 0.760081827640533, 
    'totalEnergy': -296309391360.0, 'cpuTime': 34.2000007629395, 
    'jobName': 'Job-1', 'step': 1, 'increment': 6614, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 15834749952.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 19, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.800000011920929, 
    'stableTimeIncrement': 0.000113009242340922, 'stepTime': 0.800000011920929, 
    'totalEnergy': -322921627648.0, 'cpuTime': 36.0, 'jobName': 'Job-1', 
    'step': 1, 'increment': 6966, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 3505916672.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 20, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': EXPLICIT_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Fri Jan 10 19:29:49 2020', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-ban'].features['Solid revolve-1'].sketch)
mdb.models['Model-1'].parts['Part-ban'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-ban'].features['Solid revolve-1'])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[0], ))
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    101.476463317871, 0.0291948318481445), value=1.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1])
mdb.models['Model-1'].parts['Part-ban'].features['Solid revolve-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Part-ban'].regenerate()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs.changeKey(fromName='Job-1', toName='3mm')
mdb.jobs.changeKey(fromName='3mm', toName='3mm-ban')
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-qiu'].features['Solid revolve-1'].sketch)
mdb.models['Model-1'].parts['Part-qiu'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-qiu'].features['Solid revolve-1'])
mdb.models['Model-1'].sketches['__edit__'].VerticalDimension(textPoint=(
    -1.34257364273071, 2.46741008758545), value=42.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2])
mdb.models['Model-1'].parts['Part-qiu'].features['Solid revolve-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Part-qiu'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-qiu'].features['Solid revolve-1'].sketch)
mdb.models['Model-1'].parts['Part-qiu'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-qiu'].features['Solid revolve-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.Job(activateLoadBalancing=False, atTime=None, contactPrint=OFF, 
    description='', echoPrint=OFF, explicitPrecision=SINGLE, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='1mmban', nodalOutputPrecision=SINGLE, 
    numCpus=1, numDomains=1, parallelizationMethodExplicit=DOMAIN, queue=None, 
    resultsFormat=ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=
    0, waitMinutes=0)
mdb.models['Model-1'].parts['Part-ban'].setElementType(elemTypes=(ElemType(
    elemCode=C3D8R, elemLibrary=STANDARD, secondOrderAccuracy=OFF, 
    kinematicSplit=AVERAGE_STRAIN, hourglassControl=DEFAULT, 
    distortionControl=DEFAULT), ElemType(elemCode=C3D6, elemLibrary=STANDARD), 
    ElemType(elemCode=C3D4, elemLibrary=STANDARD)), regions=(
    mdb.models['Model-1'].parts['Part-ban'].cells.getSequenceFromMask(('[#3 ]', 
    ), ), ))
mdb.models['Model-1'].parts['Part-ban'].generateMesh()
mdb.models['Model-1'].parts['Part-qiu'].generateMesh()
mdb.models['Model-1'].parts['Part-qiu'].deleteMesh(regions=
    mdb.models['Model-1'].parts['Part-qiu'].cells.getSequenceFromMask(('[#f ]', 
    ), ))
mdb.models['Model-1'].parts['Part-qiu'].seedEdgeByNumber(constraint=FINER, 
    edges=mdb.models['Model-1'].parts['Part-qiu'].edges.getSequenceFromMask((
    '[#1910 ]', ), ), number=30)
mdb.models['Model-1'].parts['Part-qiu'].generateMesh()
# Save by XLH on 2020_01_10-20.06.30; build 2016 2015_09_25-04.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['1mmban'].submit(consistencyChecking=OFF)
mdb.jobs['1mmban']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 0, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'BOUNDARY CONDITIONS ON DEGREES OF FREEDOM CONSTRAINED BY A TYPE BOUNDARY CONDITION ARE BEING REDEFINED ON AN INDIVIDUAL DEGREE OF FREEDOM BASIS', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 13624, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 2 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Boundary conditions are defined at the nodes contained in node set WarnNodeBcIntersectKinCon. In addition the nodes are also part of a surface involved in kinematic contact. The kinematic contact constraint will be overridden by the boundary conditions in case of a conflict. Penalty contact may be used instead.', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 12500, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 4.39740470028482e-05, 'stepTime': 0.0, 
    'totalEnergy': 11341298688.0, 'cpuTime': 1.19999992847443, 
    'jobName': '1mmban', 'step': 1, 'increment': 0, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 11341298688.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The slave surface nodes in node set WarnNodeMassRatio3fix-Step1 have much larger masses than the nodes on the master surface. Significant contact noise may result. Suggested workarounds include setting the WEIGHT parameter so that what was the master surface becomes a pure slave surface in the contact pair, using mass-scaling to adjust the ratio of nodal masses, or using the penalty contact algorithm. See the status file for further details.', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0400035381317139, 
    'stableTimeIncrement': 9.76480077952147e-05, 
    'stepTime': 0.0400035381317139, 'totalEnergy': 10328514560.0, 
    'cpuTime': 18.2999992370605, 'jobName': '1mmban', 'step': 1, 
    'increment': 419, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11826522112.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0800386592745781, 
    'stableTimeIncrement': 9.76453375187702e-05, 
    'stepTime': 0.0800386592745781, 'totalEnergy': 9160591360.0, 
    'cpuTime': 35.2000007629395, 'jobName': '1mmban', 'step': 1, 
    'increment': 829, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 12307205120.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.120074056088924, 
    'stableTimeIncrement': 9.7645926871337e-05, 'stepTime': 0.120074056088924, 
    'totalEnergy': 7477300736.0, 'cpuTime': 51.9000015258789, 
    'jobName': '1mmban', 'step': 1, 'increment': 1239, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 13001412608.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.160011753439903, 
    'stableTimeIncrement': 9.76457886281423e-05, 'stepTime': 0.160011753439903, 
    'totalEnergy': 5146771968.0, 'cpuTime': 68.5999984741211, 
    'jobName': '1mmban', 'step': 1, 'increment': 1648, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 14001635328.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.20004715025425, 
    'stableTimeIncrement': 9.76419614744373e-05, 'stepTime': 0.20004715025425, 
    'totalEnergy': 2152508160.0, 'cpuTime': 85.4000015258789, 
    'jobName': '1mmban', 'step': 1, 'increment': 2058, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 15307656192.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.240082547068596, 
    'stableTimeIncrement': 9.7647680377122e-05, 'stepTime': 0.240082547068596, 
    'totalEnergy': -1531252736.0, 'cpuTime': 102.099998474121, 
    'jobName': '1mmban', 'step': 1, 'increment': 2468, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 16949540864.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.280015707015991, 
    'stableTimeIncrement': 9.76419833023101e-05, 'stepTime': 0.280015707015991, 
    'totalEnergy': -5901219840.0, 'cpuTime': 118.800003051758, 
    'jobName': '1mmban', 'step': 1, 'increment': 2877, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 18898765824.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.320044994354248, 
    'stableTimeIncrement': 9.76432711468078e-05, 'stepTime': 0.320044994354248, 
    'totalEnergy': -10978182144.0, 'cpuTime': 135.5, 'jobName': '1mmban', 
    'step': 1, 'increment': 3287, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 21181718528.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.360074281692505, 
    'stableTimeIncrement': 9.76432202151045e-05, 'stepTime': 0.360074281692505, 
    'totalEnergy': -16786420736.0, 'cpuTime': 152.199996948242, 
    'jobName': '1mmban', 'step': 1, 'increment': 3697, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 23774146560.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.40000593662262, 
    'stableTimeIncrement': 9.76417286437936e-05, 'stepTime': 0.40000593662262, 
    'totalEnergy': -23281770496.0, 'cpuTime': 168.899993896484, 
    'jobName': '1mmban', 'step': 1, 'increment': 4106, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 26569312256.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.440035223960876, 
    'stableTimeIncrement': 9.76429291768e-05, 'stepTime': 0.440035223960876, 
    'totalEnergy': -30581596160.0, 'cpuTime': 185.599990844727, 
    'jobName': '1mmban', 'step': 1, 'increment': 4516, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 30003027968.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 11, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.480064511299133, 
    'stableTimeIncrement': 9.76422525127418e-05, 'stepTime': 0.480064511299133, 
    'totalEnergy': -38645444608.0, 'cpuTime': 202.299987792969, 
    'jobName': '1mmban', 'step': 1, 'increment': 4926, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 33203761152.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 12, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.52009379863739, 
    'stableTimeIncrement': 9.76414594333619e-05, 'stepTime': 0.52009379863739, 
    'totalEnergy': -47558901760.0, 'cpuTime': 219.099990844727, 
    'jobName': '1mmban', 'step': 1, 'increment': 5336, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 36519190528.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 13, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.560025453567505, 
    'stableTimeIncrement': 9.76421433733776e-05, 'stepTime': 0.560025453567505, 
    'totalEnergy': -57332920320.0, 'cpuTime': 235.799987792969, 
    'jobName': '1mmban', 'step': 1, 'increment': 5745, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 41952325632.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 14, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.600054740905762, 
    'stableTimeIncrement': 9.76440715021454e-05, 'stepTime': 0.600054740905762, 
    'totalEnergy': -67948736512.0, 'cpuTime': 252.5, 'jobName': '1mmban', 
    'step': 1, 'increment': 6155, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 47889432576.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 15, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.640084028244019, 
    'stableTimeIncrement': 9.76421288214624e-05, 'stepTime': 0.640084028244019, 
    'totalEnergy': -79417294848.0, 'cpuTime': 269.199981689453, 
    'jobName': '1mmban', 'step': 1, 'increment': 6565, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 48142430208.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 16, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.680015683174133, 
    'stableTimeIncrement': 9.76435112534091e-05, 'stepTime': 0.680015683174133, 
    'totalEnergy': -91768225792.0, 'cpuTime': 285.899993896484, 
    'jobName': '1mmban', 'step': 1, 'increment': 6974, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 41857327104.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 17, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.72004497051239, 
    'stableTimeIncrement': 9.76418305072002e-05, 'stepTime': 0.72004497051239, 
    'totalEnergy': -105876570112.0, 'cpuTime': 303.0, 'jobName': '1mmban', 
    'step': 1, 'increment': 7384, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 34135767040.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 18, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.760074257850647, 
    'stableTimeIncrement': 9.76419614744373e-05, 'stepTime': 0.760074257850647, 
    'totalEnergy': -122658529280.0, 'cpuTime': 320.199981689453, 
    'jobName': '1mmban', 'step': 1, 'increment': 7794, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 27845500928.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 19, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.800000011920929, 
    'stableTimeIncrement': 9.76430237642489e-05, 'stepTime': 0.800000011920929, 
    'totalEnergy': -142329102336.0, 'cpuTime': 337.399993896484, 
    'jobName': '1mmban', 'step': 1, 'increment': 8203, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 24574617600.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 20, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(COMPLETED, {'phase': EXPLICIT_PHASE, 
    'message': 'Phase complete', 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(JOB_COMPLETED, {'time': 'Fri Jan 10 20:12:53 2020', 
    'jobName': '1mmban'})
mdb.models['Model-1'].materials['Steel'].elastic.setValues(table=((
    210000000000.0, 0.3), ))
mdb.jobs['1mmban'].submit(consistencyChecking=OFF)
mdb.jobs['1mmban']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 0, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'BOUNDARY CONDITIONS ON DEGREES OF FREEDOM CONSTRAINED BY A TYPE BOUNDARY CONDITION ARE BEING REDEFINED ON AN INDIVIDUAL DEGREE OF FREEDOM BASIS', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 13664, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 2 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Boundary conditions are defined at the nodes contained in node set WarnNodeBcIntersectKinCon. In addition the nodes are also part of a surface involved in kinematic contact. The kinematic contact constraint will be overridden by the boundary conditions in case of a conflict. Penalty contact may be used instead.', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 11040, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 3.60757258022204e-05, 'stepTime': 0.0, 
    'totalEnergy': 11341298688.0, 'cpuTime': 1.10000002384186, 
    'jobName': '1mmban', 'step': 1, 'increment': 0, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 11341298688.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The slave surface nodes in node set WarnNodeMassRatio3fix-Step1 have much larger masses than the nodes on the master surface. Significant contact noise may result. Suggested workarounds include setting the WEIGHT parameter so that what was the master surface becomes a pure slave surface in the contact pair, using mass-scaling to adjust the ratio of nodal masses, or using the penalty contact algorithm. See the status file for further details.', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0400088205933571, 
    'stableTimeIncrement': 3.6082881706534e-05, 'stepTime': 0.0400088205933571, 
    'totalEnergy': 8797904896.0, 'cpuTime': 36.8000030517578, 
    'jobName': '1mmban', 'step': 1, 'increment': 1109, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 12665019392.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0800134316086769, 
    'stableTimeIncrement': 3.60772028216161e-05, 
    'stepTime': 0.0800134316086769, 'totalEnergy': 5419485696.0, 
    'cpuTime': 72.5999984741211, 'jobName': '1mmban', 'step': 1, 
    'increment': 2218, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 13966343168.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.120002381503582, 
    'stableTimeIncrement': 3.60403937520459e-05, 'stepTime': 0.120002381503582, 
    'totalEnergy': 636723904.0, 'cpuTime': 108.200004577637, 
    'jobName': '1mmban', 'step': 1, 'increment': 3327, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 15759123456.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.160012036561966, 
    'stableTimeIncrement': 3.60501690011006e-05, 'stepTime': 0.160012036561966, 
    'totalEnergy': -6138319360.0, 'cpuTime': 143.899993896484, 
    'jobName': '1mmban', 'step': 1, 'increment': 4437, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 18421528576.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.200032651424408, 
    'stableTimeIncrement': 3.60436497430783e-05, 'stepTime': 0.200032651424408, 
    'totalEnergy': -15099697152.0, 'cpuTime': 179.5, 'jobName': '1mmban', 
    'step': 1, 'increment': 5547, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 22009378816.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.240026518702507, 
    'stableTimeIncrement': 3.6022796848556e-05, 'stepTime': 0.240026518702507, 
    'totalEnergy': -26613864448.0, 'cpuTime': 215.199996948242, 
    'jobName': '1mmban', 'step': 1, 'increment': 6657, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 26312103936.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.280018180608749, 
    'stableTimeIncrement': 3.60363519575913e-05, 'stepTime': 0.280018180608749, 
    'totalEnergy': -40397332480.0, 'cpuTime': 250.899993896484, 
    'jobName': '1mmban', 'step': 1, 'increment': 7767, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 33343430656.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.32001918554306, 
    'stableTimeIncrement': 3.60260237357579e-05, 'stepTime': 0.32001918554306, 
    'totalEnergy': -56452829184.0, 'cpuTime': 286.600006103516, 
    'jobName': '1mmban', 'step': 1, 'increment': 8877, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 40968663040.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.360022187232971, 
    'stableTimeIncrement': 3.59815312549472e-05, 'stepTime': 0.360022187232971, 
    'totalEnergy': -76304244736.0, 'cpuTime': 322.399993896484, 
    'jobName': '1mmban', 'step': 1, 'increment': 9988, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 40392265728.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.400020658969879, 
    'stableTimeIncrement': 3.59553741873242e-05, 'stepTime': 0.400020658969879, 
    'totalEnergy': -100278378496.0, 'cpuTime': 358.100006103516, 
    'jobName': '1mmban', 'step': 1, 'increment': 11100, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 31310831616.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.44002366065979, 
    'stableTimeIncrement': 3.59355835826136e-05, 'stepTime': 0.44002366065979, 
    'totalEnergy': -126564769792.0, 'cpuTime': 393.899993896484, 
    'jobName': '1mmban', 'step': 1, 'increment': 12213, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 18199656448.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 11, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.480026662349701, 
    'stableTimeIncrement': 3.59398800355848e-05, 'stepTime': 0.480026662349701, 
    'totalEnergy': -159823003648.0, 'cpuTime': 429.699981689453, 
    'jobName': '1mmban', 'step': 1, 'increment': 13326, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 13514936320.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 12, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.520029664039612, 
    'stableTimeIncrement': 3.59254154318478e-05, 'stepTime': 0.520029664039612, 
    'totalEnergy': -218215546880.0, 'cpuTime': 465.600006103516, 
    'jobName': '1mmban', 'step': 1, 'increment': 14439, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 15461101568.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 13, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.560031831264496, 
    'stableTimeIncrement': 3.56829114025459e-05, 'stepTime': 0.560031831264496, 
    'totalEnergy': -306131959808.0, 'cpuTime': 501.699981689453, 
    'jobName': '1mmban', 'step': 1, 'increment': 15556, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 18837286912.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 14, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.600006222724915, 
    'stableTimeIncrement': 3.55204574589152e-05, 'stepTime': 0.600006222724915, 
    'totalEnergy': -411656454144.0, 'cpuTime': 538.100036621094, 
    'jobName': '1mmban', 'step': 1, 'increment': 16679, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 32898062336.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 15, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.640005230903625, 
    'stableTimeIncrement': 3.54021140083205e-05, 'stepTime': 0.640005230903625, 
    'totalEnergy': -528382361600.0, 'cpuTime': 574.900024414063, 
    'jobName': '1mmban', 'step': 1, 'increment': 17807, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 51722952704.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 16, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.680028021335602, 
    'stableTimeIncrement': 3.52424503944349e-05, 'stepTime': 0.680028021335602, 
    'totalEnergy': -656654991360.0, 'cpuTime': 611.700012207031, 
    'jobName': '1mmban', 'step': 1, 'increment': 18940, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 31498569728.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 17, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.720022678375244, 
    'stableTimeIncrement': 3.50734226230998e-05, 'stepTime': 0.720022678375244, 
    'totalEnergy': -796121890816.0, 'cpuTime': 648.600036621094, 
    'jobName': '1mmban', 'step': 1, 'increment': 20077, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 15321137152.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 18, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.760004341602325, 
    'stableTimeIncrement': 3.44705549650826e-05, 'stepTime': 0.760004341602325, 
    'totalEnergy': -973546520576.0, 'cpuTime': 686.100036621094, 
    'jobName': '1mmban', 'step': 1, 'increment': 21226, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 16431859712.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 19, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.800000011920929, 
    'stableTimeIncrement': 3.41302838933188e-05, 'stepTime': 0.800000011920929, 
    'totalEnergy': -1214942019584.0, 'cpuTime': 724.200012207031, 
    'jobName': '1mmban', 'step': 1, 'increment': 22394, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 26905245696.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 20, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(COMPLETED, {'phase': EXPLICIT_PHASE, 
    'message': 'Phase complete', 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(JOB_COMPLETED, {'time': 'Fri Jan 10 20:35:54 2020', 
    'jobName': '1mmban'})
mdb.models['Model-1'].steps['Step-1'].setValues(timePeriod=0.0001)
mdb.models['Model-1'].steps['Step-1'].suppress()
mdb.models['Model-1'].Velocity(distributionType=MAGNITUDE, field='', name=
    'Predefined Field-1', omega=0.0, region=
    mdb.models['Model-1'].rootAssembly.instances['Part-qiu-1'].sets['Set-1'], 
    velocity1=0.0, velocity2=-30.0, velocity3=0.0)
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-ban'].features['Solid revolve-1'].sketch)
mdb.models['Model-1'].parts['Part-ban'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-ban'].features['Solid revolve-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Part-ban'].deleteFeatures(('Solid revolve-1', 
    'Partition cell-1'))
mdb.models['Model-1'].parts['Part-ban'].setValues(space=THREE_D, type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-ban'].regenerate()
mdb.models['Model-1'].Part(name='ban', objectToCopy=
    mdb.models['Model-1'].parts['Part-qiu'])
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['ban'].features['Solid revolve-1'].sketch)
mdb.models['Model-1'].parts['ban'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=mdb.models['Model-1'].parts['ban'].features['Solid revolve-1'])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[2], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[4], 
    mdb.models['Model-1'].sketches['__edit__'].dimensions[0], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[7]))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[5], ))
mdb.models['Model-1'].sketches['__edit__'].rectangle(point1=(0.0, 21.25), 
    point2=(47.5, 20.0))
mdb.models['Model-1'].sketches['__edit__'].HorizontalDimension(textPoint=(
    32.6775970458984, 23.3211364746094), value=50.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[4], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[7])
mdb.models['Model-1'].sketches['__edit__'].VerticalDimension(textPoint=(
    -4.11843490600586, 20.4648513793945), value=1.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[4], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[5])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['ban'].features['Solid revolve-1'].suppress()
mdb.models['Model-1'].parts['ban'].setValues(space=THREE_D, type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['ban'].regenerate()
del mdb.models['Model-1'].parts['ban']
del mdb.models['Model-1'].parts['Part-ban']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.0, 0.0), 
    point2=(61.25, 2.5))
mdb.models['Model-1'].sketches['__profile__'].ObliqueDimension(textPoint=(
    -3.7424488067627, 1.32514142990112), value=1.0, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[1])
mdb.models['Model-1'].sketches['__profile__'].ObliqueDimension(textPoint=(
    13.362548828125, 5.24793195724487), value=50.0, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[1], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[2])
mdb.models['Model-1'].sketches['__profile__'].move(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[2], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[3], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[4], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[5]), vector=(0.0, 
    -1.5))
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='ban', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['ban'].BaseSolidExtrude(depth=100.0, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].rootAssembly.regenerate()
#* FeatureError: Regeneration failed
del mdb.models['Model-1'].rootAssembly.features['Part-ban-1']
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='ban-1', part=
    mdb.models['Model-1'].parts['ban'])
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-qiu-1', ), 
    vector=(25.0, 1.0, 0.0))
mdb.models['Model-1'].rootAssembly.rotate(angle=90.0, axisDirection=(0.0, 
    -21.0, 0.0), axisPoint=(25.0, 22.0, 0.0), instanceList=('Part-qiu-1', ))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-qiu-1', ), 
    vector=(25.0, 0.0, 50.0))
mdb.models['Model-1'].parts['ban'].Surface(name='Surf-1', side1Faces=
    mdb.models['Model-1'].parts['ban'].faces.getSequenceFromMask(('[#2 ]', ), 
    ))
mdb.models['Model-1'].parts['ban'].Set(faces=
    mdb.models['Model-1'].parts['ban'].faces.getSequenceFromMask(('[#31 ]', ), 
    ), name='ban fix')
mdb.models['Model-1'].parts['ban'].Surface(name='sym', side1Faces=
    mdb.models['Model-1'].parts['ban'].faces.getSequenceFromMask(('[#4 ]', ), 
    ))
mdb.models['Model-1'].parts['ban'].Set(cells=
    mdb.models['Model-1'].parts['ban'].cells.getSequenceFromMask(('[#1 ]', ), )
    , name='Set-2')
mdb.models['Model-1'].parts['ban'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['ban'].sets['Set-2'], sectionName='solid_2', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['ban'].seedEdgeByNumber(constraint=FINER, edges=
    mdb.models['Model-1'].parts['ban'].edges.getSequenceFromMask(('[#22 ]', ), 
    ), number=100)
mdb.models['Model-1'].parts['ban'].seedEdgeByNumber(constraint=FINER, edges=
    mdb.models['Model-1'].parts['ban'].edges.getSequenceFromMask(('[#22 ]', ), 
    ), number=80)
mdb.models['Model-1'].parts['ban'].seedEdgeByNumber(constraint=FINER, edges=
    mdb.models['Model-1'].parts['ban'].edges.getSequenceFromMask(('[#22 ]', ), 
    ), number=50)
mdb.models['Model-1'].parts['ban'].seedEdgeByNumber(constraint=FINER, edges=
    mdb.models['Model-1'].parts['ban'].edges.getSequenceFromMask(('[#22 ]', ), 
    ), number=60)
mdb.models['Model-1'].parts['ban'].seedEdgeByNumber(constraint=FINER, edges=
    mdb.models['Model-1'].parts['ban'].edges.getSequenceFromMask(('[#50 ]', ), 
    ), number=20)
mdb.models['Model-1'].parts['ban'].seedEdgeByNumber(constraint=FINER, edges=
    mdb.models['Model-1'].parts['ban'].edges.getSequenceFromMask(('[#50 ]', ), 
    ), number=30)
mdb.models['Model-1'].parts['ban'].seedEdgeByNumber(constraint=FINER, edges=
    mdb.models['Model-1'].parts['ban'].edges.getSequenceFromMask(('[#1 ]', ), )
    , number=3)
mdb.models['Model-1'].parts['ban'].seedEdgeByNumber(constraint=FINER, edges=
    mdb.models['Model-1'].parts['ban'].edges.getSequenceFromMask(('[#22 ]', ), 
    ), number=40)
mdb.models['Model-1'].parts['ban'].generateMesh()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].steps['Step-1'].resume()
mdb.models['Model-1'].interactions['Int-1'].setValues(clearanceRegion=None, 
    datumAxis=None, initialClearance=OMIT, interactionProperty='IntProp-1', 
    master=
    mdb.models['Model-1'].rootAssembly.instances['ban-1'].surfaces['Surf-1'], 
    mechanicalConstraint=KINEMATIC, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['Surf-qiu'], sliding=FINITE)
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-qiu-1'].faces.getSequenceFromMask(
    mask=('[#cc0 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['ban-1'].faces.getSequenceFromMask(
    mask=('[#4 ]', ), ), name='Set-Symm')
mdb.models['Model-1'].rootAssembly.Set(edges=
    mdb.models['Model-1'].rootAssembly.instances['ban-1'].edges.getSequenceFromMask(
    ('[#400 ]', ), ), faces=
    mdb.models['Model-1'].rootAssembly.instances['ban-1'].faces.getSequenceFromMask(
    ('[#21 ]', ), ), name='Set-Fix')
mdb.models['Model-1'].boundaryConditions['BC-Symm'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['Set-Symm'])
mdb.jobs['1mmban'].submit(consistencyChecking=OFF)
mdb.jobs['1mmban']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 0, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'BOUNDARY CONDITIONS ON DEGREES OF FREEDOM CONSTRAINED BY A TYPE BOUNDARY CONDITION ARE BEING REDEFINED ON AN INDIVIDUAL DEGREE OF FREEDOM BASIS', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 14612, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 2 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Boundary conditions are defined at the nodes contained in node set WarnNodeBcIntersectKinCon. In addition the nodes are also part of a surface involved in kinematic contact. The kinematic contact constraint will be overridden by the boundary conditions in case of a conflict. Penalty contact may be used instead.', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 1016, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 4.39741634181701e-05, 'stepTime': 0.0, 
    'totalEnergy': 11341298688.0, 'cpuTime': 1.10000002384186, 
    'jobName': '1mmban', 'step': 1, 'increment': 0, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 11341298688.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The slave surface nodes in node set WarnNodeMassRatio3fix-Step1 have much larger masses than the nodes on the master surface. Significant contact noise may result. Suggested workarounds include setting the WEIGHT parameter so that what was the master surface becomes a pure slave surface in the contact pair, using mass-scaling to adjust the ratio of nodal masses, or using the penalty contact algorithm. See the status file for further details.', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 4.39741634181701e-05, 
    'stableTimeIncrement': 4.39741634181701e-05, 
    'stepTime': 4.39741634181701e-05, 'totalEnergy': 11340684288.0, 
    'cpuTime': 1.19999992847443, 'jobName': '1mmban', 'step': 1, 
    'increment': 1, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341863936.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 7.19870804459788e-05, 
    'stableTimeIncrement': 4.39741634181701e-05, 
    'stepTime': 7.19870804459788e-05, 'totalEnergy': 11340661760.0, 
    'cpuTime': 1.29999995231628, 'jobName': '1mmban', 'step': 1, 
    'increment': 2, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341995008.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 9.99999974737875e-05, 
    'stableTimeIncrement': 4.39741634181701e-05, 
    'stepTime': 9.99999974737875e-05, 'totalEnergy': 11340638208.0, 
    'cpuTime': 1.39999997615814, 'jobName': '1mmban', 'step': 1, 
    'increment': 3, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11342179328.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(COMPLETED, {'phase': EXPLICIT_PHASE, 
    'message': 'Phase complete', 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(JOB_COMPLETED, {'time': 'Fri Jan 10 22:01:26 2020', 
    'jobName': '1mmban'})
mdb.jobs['1mmban'].submit(consistencyChecking=OFF)
mdb.jobs['1mmban']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 0, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'BOUNDARY CONDITIONS ON DEGREES OF FREEDOM CONSTRAINED BY A TYPE BOUNDARY CONDITION ARE BEING REDEFINED ON AN INDIVIDUAL DEGREE OF FREEDOM BASIS', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 15292, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 2 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Boundary conditions are defined at the nodes contained in node set WarnNodeBcIntersectKinCon. In addition the nodes are also part of a surface involved in kinematic contact. The kinematic contact constraint will be overridden by the boundary conditions in case of a conflict. Penalty contact may be used instead.', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 9948, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 4.39741634181701e-05, 'stepTime': 0.0, 
    'totalEnergy': 11341298688.0, 'cpuTime': 1.10000002384186, 
    'jobName': '1mmban', 'step': 1, 'increment': 0, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 11341298688.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The slave surface nodes in node set WarnNodeMassRatio3fix-Step1 have much larger masses than the nodes on the master surface. Significant contact noise may result. Suggested workarounds include setting the WEIGHT parameter so that what was the master surface becomes a pure slave surface in the contact pair, using mass-scaling to adjust the ratio of nodal masses, or using the penalty contact algorithm. See the status file for further details.', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 4.39741634181701e-05, 
    'stableTimeIncrement': 4.39741634181701e-05, 
    'stepTime': 4.39741634181701e-05, 'totalEnergy': 11340684288.0, 
    'cpuTime': 1.29999995231628, 'jobName': '1mmban', 'step': 1, 
    'increment': 1, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341863936.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 7.19870804459788e-05, 
    'stableTimeIncrement': 4.39741634181701e-05, 
    'stepTime': 7.19870804459788e-05, 'totalEnergy': 11340661760.0, 
    'cpuTime': 1.39999997615814, 'jobName': '1mmban', 'step': 1, 
    'increment': 2, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341995008.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 9.99999974737875e-05, 
    'stableTimeIncrement': 4.39741634181701e-05, 
    'stepTime': 9.99999974737875e-05, 'totalEnergy': 11340638208.0, 
    'cpuTime': 1.5, 'jobName': '1mmban', 'step': 1, 'increment': 3, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 11342179328.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(COMPLETED, {'phase': EXPLICIT_PHASE, 
    'message': 'Phase complete', 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(JOB_COMPLETED, {'time': 'Fri Jan 10 22:02:31 2020', 
    'jobName': '1mmban'})
mdb.models['Model-1'].interactions['Int-1'].setValues(clearanceRegion=None, 
    datumAxis=None, initialClearance=OMIT, interactionProperty='IntProp-1', 
    mechanicalConstraint=PENALTY, sliding=FINITE)
mdb.models['Model-1'].steps['Step-1'].setValues(timePeriod=0.01)
mdb.jobs['1mmban'].submit(consistencyChecking=OFF)
mdb.jobs['1mmban']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 0, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'BOUNDARY CONDITIONS ON DEGREES OF FREEDOM CONSTRAINED BY A TYPE BOUNDARY CONDITION ARE BEING REDEFINED ON AN INDIVIDUAL DEGREE OF FREEDOM BASIS', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 7872, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 2 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 12100, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 4.39741634181701e-05, 'stepTime': 0.0, 
    'totalEnergy': 11341298688.0, 'cpuTime': 1.10000002384186, 
    'jobName': '1mmban', 'step': 1, 'increment': 0, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 11341298688.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.000527689990121871, 
    'stableTimeIncrement': 4.88854457216803e-05, 
    'stepTime': 0.000527689990121871, 'totalEnergy': 11341298688.0, 
    'cpuTime': 1.60000002384186, 'jobName': '1mmban', 'step': 1, 
    'increment': 12, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341301760.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.00101335463114083, 
    'stableTimeIncrement': 4.8341738875024e-05, 
    'stepTime': 0.00101335463114083, 'totalEnergy': 11341298688.0, 
    'cpuTime': 2.09999990463257, 'jobName': '1mmban', 'step': 1, 
    'increment': 22, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341318144.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.00154443818610162, 
    'stableTimeIncrement': 4.82376563013531e-05, 
    'stepTime': 0.00154443818610162, 'totalEnergy': 11341298688.0, 
    'cpuTime': 2.59999990463257, 'jobName': '1mmban', 'step': 1, 
    'increment': 33, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341423616.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.00202669762074947, 
    'stableTimeIncrement': 4.82160758110695e-05, 
    'stepTime': 0.00202669762074947, 'totalEnergy': 11341298688.0, 
    'cpuTime': 3.0, 'jobName': '1mmban', 'step': 1, 'increment': 43, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341730816.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.00250881724059582, 
    'stableTimeIncrement': 4.82081886730157e-05, 
    'stepTime': 0.00250881724059582, 'totalEnergy': 11341299712.0, 
    'cpuTime': 3.5, 'jobName': '1mmban', 'step': 1, 'increment': 53, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 11342436352.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.00303908484056592, 
    'stableTimeIncrement': 4.82041905343067e-05, 
    'stepTime': 0.00303908484056592, 'totalEnergy': 11341299712.0, 
    'cpuTime': 4.0, 'jobName': '1mmban', 'step': 1, 'increment': 64, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 11344003072.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.00352111691609025, 
    'stableTimeIncrement': 4.82022296637297e-05, 
    'stepTime': 0.00352111691609025, 'totalEnergy': 11341299712.0, 
    'cpuTime': 4.40000009536743, 'jobName': '1mmban', 'step': 1, 
    'increment': 74, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11346505728.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.00400313315913081, 
    'stableTimeIncrement': 4.82010254927445e-05, 
    'stepTime': 0.00400313315913081, 'totalEnergy': 11341300736.0, 
    'cpuTime': 4.90000009536743, 'jobName': '1mmban', 'step': 1, 
    'increment': 84, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11350412288.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.00453333975747228, 
    'stableTimeIncrement': 4.82001632917672e-05, 
    'stepTime': 0.00453333975747228, 'totalEnergy': 11341300736.0, 
    'cpuTime': 5.40000009536743, 'jobName': '1mmban', 'step': 1, 
    'increment': 95, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11356533760.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.00501533877104521, 
    'stableTimeIncrement': 4.81996321468614e-05, 
    'stepTime': 0.00501533877104521, 'totalEnergy': 11341300736.0, 
    'cpuTime': 5.80000019073486, 'jobName': '1mmban', 'step': 1, 
    'increment': 105, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11363796992.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.00554553233087063, 
    'stableTimeIncrement': 4.81992174172774e-05, 
    'stepTime': 0.00554553233087063, 'totalEnergy': 11341300736.0, 
    'cpuTime': 6.30000019073486, 'jobName': '1mmban', 'step': 1, 
    'increment': 116, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11373720576.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 11, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.00602752389386296, 
    'stableTimeIncrement': 4.81989445688669e-05, 
    'stepTime': 0.00602752389386296, 'totalEnergy': 11341299712.0, 
    'cpuTime': 6.69999980926514, 'jobName': '1mmban', 'step': 1, 
    'increment': 126, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11384397824.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 12, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.00650951126590371, 
    'stableTimeIncrement': 4.81987299281172e-05, 
    'stepTime': 0.00650951126590371, 'totalEnergy': 11341299712.0, 
    'cpuTime': 7.19999980926514, 'jobName': '1mmban', 'step': 1, 
    'increment': 136, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11396406272.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 13, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.00703969737514853, 
    'stableTimeIncrement': 4.81985480291769e-05, 
    'stepTime': 0.00703969737514853, 'totalEnergy': 11341299712.0, 
    'cpuTime': 7.69999980926514, 'jobName': '1mmban', 'step': 1, 
    'increment': 147, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11410856960.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 14, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.00752168148756027, 
    'stableTimeIncrement': 4.81984170619398e-05, 
    'stepTime': 0.00752168148756027, 'totalEnergy': 11341298688.0, 
    'cpuTime': 8.10000038146973, 'jobName': '1mmban', 'step': 1, 
    'increment': 157, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11424861184.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 15, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0080036660656333, 
    'stableTimeIncrement': 4.81983079225756e-05, 
    'stepTime': 0.0080036660656333, 'totalEnergy': 11341298688.0, 
    'cpuTime': 8.60000038146973, 'jobName': '1mmban', 'step': 1, 
    'increment': 167, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11439437824.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 16, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0085338456556201, 
    'stableTimeIncrement': 4.8198206059169e-05, 'stepTime': 0.0085338456556201, 
    'totalEnergy': 11341297664.0, 'cpuTime': 9.10000038146973, 
    'jobName': '1mmban', 'step': 1, 'increment': 178, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 11455896576.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 17, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0090158237144351, 
    'stableTimeIncrement': 4.81981332995929e-05, 
    'stepTime': 0.0090158237144351, 'totalEnergy': 11341297664.0, 
    'cpuTime': 9.5, 'jobName': '1mmban', 'step': 1, 'increment': 188, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 11471147008.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 18, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0095459995791316, 
    'stableTimeIncrement': 4.81980605400167e-05, 
    'stepTime': 0.0095459995791316, 'totalEnergy': 11341296640.0, 
    'cpuTime': 10.0, 'jobName': '1mmban', 'step': 1, 'increment': 199, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 11488144384.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 19, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.00999999977648258, 
    'stableTimeIncrement': 4.81980059703346e-05, 
    'stepTime': 0.00999999977648258, 'totalEnergy': 11341296640.0, 
    'cpuTime': 10.5, 'jobName': '1mmban', 'step': 1, 'increment': 209, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 11502821376.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 20, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(COMPLETED, {'phase': EXPLICIT_PHASE, 
    'message': 'Phase complete', 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(JOB_COMPLETED, {'time': 'Fri Jan 10 22:16:07 2020', 
    'jobName': '1mmban'})
mdb.models['Model-1'].steps['Step-1'].setValues(timePeriod=0.1)
mdb.jobs['1mmban'].submit(consistencyChecking=OFF)
mdb.jobs['1mmban']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 0, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'BOUNDARY CONDITIONS ON DEGREES OF FREEDOM CONSTRAINED BY A TYPE BOUNDARY CONDITION ARE BEING REDEFINED ON AN INDIVIDUAL DEGREE OF FREEDOM BASIS', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 11336, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 2 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 6892, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 4.39741634181701e-05, 'stepTime': 0.0, 
    'totalEnergy': 11341298688.0, 'cpuTime': 1.10000002384186, 
    'jobName': '1mmban', 'step': 1, 'increment': 0, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 11341298688.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.00501533877104521, 
    'stableTimeIncrement': 4.81996321468614e-05, 
    'stepTime': 0.00501533877104521, 'totalEnergy': 11341300736.0, 
    'cpuTime': 5.30000019073486, 'jobName': '1mmban', 'step': 1, 
    'increment': 105, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11363796992.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0100279776379466, 
    'stableTimeIncrement': 4.81980059703346e-05, 
    'stepTime': 0.0100279776379466, 'totalEnergy': 11341296640.0, 
    'cpuTime': 9.39999961853027, 'jobName': '1mmban', 'step': 1, 
    'increment': 209, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11503729664.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0150405494496226, 
    'stableTimeIncrement': 4.81976494484115e-05, 
    'stepTime': 0.0150405494496226, 'totalEnergy': 11341295616.0, 
    'cpuTime': 13.3999996185303, 'jobName': '1mmban', 'step': 1, 
    'increment': 313, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11666318336.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0200049225240946, 
    'stableTimeIncrement': 4.81974275317043e-05, 
    'stepTime': 0.0200049225240946, 'totalEnergy': 11341295616.0, 
    'cpuTime': 17.5, 'jobName': '1mmban', 'step': 1, 'increment': 416, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 11827014656.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0250174943357706, 
    'stableTimeIncrement': 4.81971983390395e-05, 
    'stepTime': 0.0250174943357706, 'totalEnergy': 11341295616.0, 
    'cpuTime': 21.5, 'jobName': '1mmban', 'step': 1, 'increment': 520, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 11994245120.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0300300661474466, 
    'stableTimeIncrement': 4.81969545944594e-05, 
    'stepTime': 0.0300300661474466, 'totalEnergy': 11341296640.0, 
    'cpuTime': 25.6000003814697, 'jobName': '1mmban', 'step': 1, 
    'increment': 624, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 12163821568.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0350426360964775, 
    'stableTimeIncrement': 4.81966962979641e-05, 
    'stepTime': 0.0350426360964775, 'totalEnergy': 11341298688.0, 
    'cpuTime': 29.7000007629395, 'jobName': '1mmban', 'step': 1, 
    'increment': 728, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 12331046912.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.040007010102272, 
    'stableTimeIncrement': 4.81963979837019e-05, 'stepTime': 0.040007010102272, 
    'totalEnergy': 11341300736.0, 'cpuTime': 33.7999992370605, 
    'jobName': '1mmban', 'step': 1, 'increment': 831, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 12491803648.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0450195819139481, 
    'stableTimeIncrement': 4.81960778415669e-05, 
    'stepTime': 0.0450195819139481, 'totalEnergy': 11341303808.0, 
    'cpuTime': 37.9000015258789, 'jobName': '1mmban', 'step': 1, 
    'increment': 935, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 12649057280.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0500319600105286, 
    'stableTimeIncrement': 4.8195717681665e-05, 'stepTime': 0.0500319600105286, 
    'totalEnergy': 11341306880.0, 'cpuTime': 42.0, 'jobName': '1mmban', 
    'step': 1, 'increment': 1039, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 12778115072.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0550441443920136, 
    'stableTimeIncrement': 4.81934584968258e-05, 
    'stepTime': 0.0550441443920136, 'totalEnergy': 11341310976.0, 
    'cpuTime': 46.0999984741211, 'jobName': '1mmban', 'step': 1, 
    'increment': 1143, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 12913872896.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 11, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0600079745054245, 
    'stableTimeIncrement': 4.81911702081561e-05, 
    'stepTime': 0.0600079745054245, 'totalEnergy': 11341315072.0, 
    'cpuTime': 50.0999984741211, 'jobName': '1mmban', 'step': 1, 
    'increment': 1246, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 13001858048.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 12, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0650197714567184, 
    'stableTimeIncrement': 4.81897477584425e-05, 
    'stepTime': 0.0650197714567184, 'totalEnergy': 11341318144.0, 
    'cpuTime': 54.2000007629395, 'jobName': '1mmban', 'step': 1, 
    'increment': 1350, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 13110110208.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 13, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0700315684080124, 
    'stableTimeIncrement': 4.81888091599103e-05, 
    'stepTime': 0.0700315684080124, 'totalEnergy': 11341324288.0, 
    'cpuTime': 58.2999992370605, 'jobName': '1mmban', 'step': 1, 
    'increment': 1454, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 13191044096.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 14, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0750433653593063, 
    'stableTimeIncrement': 4.81893766846042e-05, 
    'stepTime': 0.0750433653593063, 'totalEnergy': 11341331456.0, 
    'cpuTime': 62.4000015258789, 'jobName': '1mmban', 'step': 1, 
    'increment': 1558, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 13208067072.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 15, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0800069719552994, 
    'stableTimeIncrement': 4.81918286823202e-05, 
    'stepTime': 0.0800069719552994, 'totalEnergy': 11341337600.0, 
    'cpuTime': 66.5, 'jobName': '1mmban', 'step': 1, 'increment': 1661, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 13269969920.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 16, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0850187689065933, 
    'stableTimeIncrement': 4.81913120893296e-05, 
    'stepTime': 0.0850187689065933, 'totalEnergy': 11341342720.0, 
    'cpuTime': 70.5, 'jobName': '1mmban', 'step': 1, 'increment': 1765, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 13342860288.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 17, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0900305658578873, 
    'stableTimeIncrement': 4.81903334730305e-05, 
    'stepTime': 0.0900305658578873, 'totalEnergy': 11341350912.0, 
    'cpuTime': 74.5999984741211, 'jobName': '1mmban', 'step': 1, 
    'increment': 1869, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 13507603456.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 18, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0950423628091812, 
    'stableTimeIncrement': 4.81890965602361e-05, 
    'stepTime': 0.0950423628091812, 'totalEnergy': 11341358080.0, 
    'cpuTime': 78.6999969482422, 'jobName': '1mmban', 'step': 1, 
    'increment': 1973, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 13653752832.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 19, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.100000001490116, 
    'stableTimeIncrement': 4.81871757074259e-05, 'stepTime': 0.100000001490116, 
    'totalEnergy': 11341367296.0, 'cpuTime': 82.6999969482422, 
    'jobName': '1mmban', 'step': 1, 'increment': 2076, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 13650606080.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 20, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(COMPLETED, {'phase': EXPLICIT_PHASE, 
    'message': 'Phase complete', 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(JOB_COMPLETED, {'time': 'Fri Jan 10 22:30:04 2020', 
    'jobName': '1mmban'})
mdb.models['Model-1'].FieldOutputRequest(createStepName='Step-1', name=
    'F-Output-2', variables=('U', 'UT', 'UR', 'V', 'VT', 'VR', 'A', 'AT', 'AR', 
    'RBANG', 'RBROT'))
mdb.models['Model-1'].fieldOutputRequests['F-Output-2'].setValues(variables=(
    'U', 'UT', 'UR', 'V', 'VT', 'VR', 'A', 'AT', 'AR', 'RBANG', 'RBROT', 'RF', 
    'RT', 'RM', 'CF', 'SF', 'NFORC', 'NFORCSO', 'RBFOR', 'BF', 'GRAV', 'P', 
    'HP', 'IWCONWEP', 'TRSHR', 'TRNOR', 'VP', 'STAGP', 'SBF'))
mdb.jobs['1mmban'].submit(consistencyChecking=OFF)
mdb.jobs['1mmban']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 0, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST NFORCSO IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST NFORCSO IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'BOUNDARY CONDITIONS ON DEGREES OF FREEDOM CONSTRAINED BY A TYPE BOUNDARY CONDITION ARE BEING REDEFINED ON AN INDIVIDUAL DEGREE OF FREEDOM BASIS', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 1244, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 6 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 2408, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 4.39741634181701e-05, 'stepTime': 0.0, 
    'totalEnergy': 11341298688.0, 'cpuTime': 1.10000002384186, 
    'jobName': '1mmban', 'step': 1, 'increment': 0, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 11341298688.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.00501533877104521, 
    'stableTimeIncrement': 4.81996321468614e-05, 
    'stepTime': 0.00501533877104521, 'totalEnergy': 11341300736.0, 
    'cpuTime': 5.40000009536743, 'jobName': '1mmban', 'step': 1, 
    'increment': 105, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11363796992.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0100279776379466, 
    'stableTimeIncrement': 4.81980059703346e-05, 
    'stepTime': 0.0100279776379466, 'totalEnergy': 11341296640.0, 
    'cpuTime': 9.5, 'jobName': '1mmban', 'step': 1, 'increment': 209, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 11503729664.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0150405494496226, 
    'stableTimeIncrement': 4.81976494484115e-05, 
    'stepTime': 0.0150405494496226, 'totalEnergy': 11341295616.0, 
    'cpuTime': 13.6999998092651, 'jobName': '1mmban', 'step': 1, 
    'increment': 313, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11666318336.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0200049225240946, 
    'stableTimeIncrement': 4.81974275317043e-05, 
    'stepTime': 0.0200049225240946, 'totalEnergy': 11341295616.0, 
    'cpuTime': 17.8999996185303, 'jobName': '1mmban', 'step': 1, 
    'increment': 416, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11827014656.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0250174943357706, 
    'stableTimeIncrement': 4.81971983390395e-05, 
    'stepTime': 0.0250174943357706, 'totalEnergy': 11341295616.0, 
    'cpuTime': 22.0, 'jobName': '1mmban', 'step': 1, 'increment': 520, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 11994245120.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0300300661474466, 
    'stableTimeIncrement': 4.81969545944594e-05, 
    'stepTime': 0.0300300661474466, 'totalEnergy': 11341296640.0, 
    'cpuTime': 26.2000007629395, 'jobName': '1mmban', 'step': 1, 
    'increment': 624, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 12163821568.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0350426360964775, 
    'stableTimeIncrement': 4.81966962979641e-05, 
    'stepTime': 0.0350426360964775, 'totalEnergy': 11341298688.0, 
    'cpuTime': 30.2999992370605, 'jobName': '1mmban', 'step': 1, 
    'increment': 728, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 12331046912.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.040007010102272, 
    'stableTimeIncrement': 4.81963979837019e-05, 'stepTime': 0.040007010102272, 
    'totalEnergy': 11341300736.0, 'cpuTime': 34.5, 'jobName': '1mmban', 
    'step': 1, 'increment': 831, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 12491803648.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0450195819139481, 
    'stableTimeIncrement': 4.81960778415669e-05, 
    'stepTime': 0.0450195819139481, 'totalEnergy': 11341303808.0, 
    'cpuTime': 38.5999984741211, 'jobName': '1mmban', 'step': 1, 
    'increment': 935, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 12649057280.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0500319600105286, 
    'stableTimeIncrement': 4.8195717681665e-05, 'stepTime': 0.0500319600105286, 
    'totalEnergy': 11341306880.0, 'cpuTime': 42.7999992370605, 
    'jobName': '1mmban', 'step': 1, 'increment': 1039, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 12778115072.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0550441443920136, 
    'stableTimeIncrement': 4.81934584968258e-05, 
    'stepTime': 0.0550441443920136, 'totalEnergy': 11341310976.0, 
    'cpuTime': 47.0, 'jobName': '1mmban', 'step': 1, 'increment': 1143, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 12913872896.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 11, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0600079745054245, 
    'stableTimeIncrement': 4.81911702081561e-05, 
    'stepTime': 0.0600079745054245, 'totalEnergy': 11341315072.0, 
    'cpuTime': 51.0, 'jobName': '1mmban', 'step': 1, 'increment': 1246, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 13001858048.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 12, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0650197714567184, 
    'stableTimeIncrement': 4.81897477584425e-05, 
    'stepTime': 0.0650197714567184, 'totalEnergy': 11341318144.0, 
    'cpuTime': 55.2000007629395, 'jobName': '1mmban', 'step': 1, 
    'increment': 1350, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 13110110208.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 13, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0700315684080124, 
    'stableTimeIncrement': 4.81888091599103e-05, 
    'stepTime': 0.0700315684080124, 'totalEnergy': 11341324288.0, 
    'cpuTime': 59.2999992370605, 'jobName': '1mmban', 'step': 1, 
    'increment': 1454, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 13191044096.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 14, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0750433653593063, 
    'stableTimeIncrement': 4.81893766846042e-05, 
    'stepTime': 0.0750433653593063, 'totalEnergy': 11341331456.0, 
    'cpuTime': 63.5, 'jobName': '1mmban', 'step': 1, 'increment': 1558, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 13208067072.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 15, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0800069719552994, 
    'stableTimeIncrement': 4.81918286823202e-05, 
    'stepTime': 0.0800069719552994, 'totalEnergy': 11341337600.0, 
    'cpuTime': 67.5999984741211, 'jobName': '1mmban', 'step': 1, 
    'increment': 1661, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 13269969920.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 16, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0850187689065933, 
    'stableTimeIncrement': 4.81913120893296e-05, 
    'stepTime': 0.0850187689065933, 'totalEnergy': 11341342720.0, 
    'cpuTime': 71.6999969482422, 'jobName': '1mmban', 'step': 1, 
    'increment': 1765, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 13342860288.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 17, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0900305658578873, 
    'stableTimeIncrement': 4.81903334730305e-05, 
    'stepTime': 0.0900305658578873, 'totalEnergy': 11341350912.0, 
    'cpuTime': 75.8000030517578, 'jobName': '1mmban', 'step': 1, 
    'increment': 1869, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 13507603456.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 18, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0950423628091812, 
    'stableTimeIncrement': 4.81890965602361e-05, 
    'stepTime': 0.0950423628091812, 'totalEnergy': 11341358080.0, 
    'cpuTime': 80.0, 'jobName': '1mmban', 'step': 1, 'increment': 1973, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 13653752832.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 19, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.100000001490116, 
    'stableTimeIncrement': 4.81871757074259e-05, 'stepTime': 0.100000001490116, 
    'totalEnergy': 11341367296.0, 'cpuTime': 84.0999984741211, 
    'jobName': '1mmban', 'step': 1, 'increment': 2076, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 13650606080.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 20, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(COMPLETED, {'phase': EXPLICIT_PHASE, 
    'message': 'Phase complete', 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(JOB_COMPLETED, {'time': 'Fri Jan 10 22:39:45 2020', 
    'jobName': '1mmban'})
mdb.models['Model-1'].steps['Step-1'].setValues(timePeriod=0.5)
mdb.jobs['1mmban'].submit(consistencyChecking=OFF)
mdb.jobs['1mmban']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 0, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST NFORCSO IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST NFORCSO IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'BOUNDARY CONDITIONS ON DEGREES OF FREEDOM CONSTRAINED BY A TYPE BOUNDARY CONDITION ARE BEING REDEFINED ON AN INDIVIDUAL DEGREE OF FREEDOM BASIS', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 4364, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 6 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 4920, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 4.39741634181701e-05, 'stepTime': 0.0, 
    'totalEnergy': 11341298688.0, 'cpuTime': 1.10000002384186, 
    'jobName': '1mmban', 'step': 1, 'increment': 0, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 11341298688.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0250174943357706, 
    'stableTimeIncrement': 4.81971983390395e-05, 
    'stepTime': 0.0250174943357706, 'totalEnergy': 11341295616.0, 
    'cpuTime': 21.1000003814697, 'jobName': '1mmban', 'step': 1, 
    'increment': 520, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11994245120.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0500319600105286, 
    'stableTimeIncrement': 4.8195717681665e-05, 'stepTime': 0.0500319600105286, 
    'totalEnergy': 11341306880.0, 'cpuTime': 41.2000007629395, 
    'jobName': '1mmban', 'step': 1, 'increment': 1039, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 12778115072.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0750433653593063, 
    'stableTimeIncrement': 4.81893766846042e-05, 
    'stepTime': 0.0750433653593063, 'totalEnergy': 11341331456.0, 
    'cpuTime': 61.2000007629395, 'jobName': '1mmban', 'step': 1, 
    'increment': 1558, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 13208067072.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.100005969405174, 
    'stableTimeIncrement': 4.81871757074259e-05, 'stepTime': 0.100005969405174, 
    'totalEnergy': 11341367296.0, 'cpuTime': 81.1999969482422, 
    'jobName': '1mmban', 'step': 1, 'increment': 2076, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 13650584576.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.125012561678886, 
    'stableTimeIncrement': 4.81774732179474e-05, 'stepTime': 0.125012561678886, 
    'totalEnergy': 11341443072.0, 'cpuTime': 101.199996948242, 
    'jobName': '1mmban', 'step': 1, 'increment': 2595, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 13577673728.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.150012150406837, 
    'stableTimeIncrement': 4.81581664644182e-05, 'stepTime': 0.150012150406837, 
    'totalEnergy': 11341564928.0, 'cpuTime': 121.300003051758, 
    'jobName': '1mmban', 'step': 1, 'increment': 3114, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 14126812160.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.174999997019768, 
    'stableTimeIncrement': 4.81362330901902e-05, 'stepTime': 0.174999997019768, 
    'totalEnergy': 11341692928.0, 'cpuTime': 141.300003051758, 
    'jobName': '1mmban', 'step': 1, 'increment': 3633, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 14079004672.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.200024276971817, 
    'stableTimeIncrement': 4.81090573885012e-05, 'stepTime': 0.200024276971817, 
    'totalEnergy': 11341829120.0, 'cpuTime': 161.5, 'jobName': '1mmban', 
    'step': 1, 'increment': 4153, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 14579808256.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.22503137588501, 
    'stableTimeIncrement': 4.80722046631854e-05, 'stepTime': 0.22503137588501, 
    'totalEnergy': 11342052352.0, 'cpuTime': 181.600006103516, 
    'jobName': '1mmban', 'step': 1, 'increment': 4673, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 15720911872.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.250017374753952, 
    'stableTimeIncrement': 4.80263988720253e-05, 'stepTime': 0.250017374753952, 
    'totalEnergy': 11342466048.0, 'cpuTime': 201.699996948242, 
    'jobName': '1mmban', 'step': 1, 'increment': 5193, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 16123757568.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.275025814771652, 
    'stableTimeIncrement': 4.79774826089852e-05, 'stepTime': 0.275025814771652, 
    'totalEnergy': 11342909440.0, 'cpuTime': 221.899993896484, 
    'jobName': '1mmban', 'step': 1, 'increment': 5714, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 15476179968.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 11, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.30000975728035, 
    'stableTimeIncrement': 4.79301234008744e-05, 'stepTime': 0.30000975728035, 
    'totalEnergy': 11343027200.0, 'cpuTime': 242.100006103516, 
    'jobName': '1mmban', 'step': 1, 'increment': 6235, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 14602706944.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 12, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.325015664100647, 
    'stableTimeIncrement': 4.78895999549422e-05, 'stepTime': 0.325015664100647, 
    'totalEnergy': 11342860288.0, 'cpuTime': 262.299987792969, 
    'jobName': '1mmban', 'step': 1, 'increment': 6757, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 15759217664.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 13, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.350002527236938, 
    'stableTimeIncrement': 4.78432230011094e-05, 'stepTime': 0.350002527236938, 
    'totalEnergy': 11342266368.0, 'cpuTime': 282.5, 'jobName': '1mmban', 
    'step': 1, 'increment': 7279, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 18271088640.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 14, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.37501534819603, 
    'stableTimeIncrement': 4.78098154417239e-05, 'stepTime': 0.37501534819603, 
    'totalEnergy': 11340468224.0, 'cpuTime': 302.700012207031, 
    'jobName': '1mmban', 'step': 1, 'increment': 7802, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 23615635456.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 15, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.400009632110596, 
    'stableTimeIncrement': 4.77672656415962e-05, 'stepTime': 0.400009632110596, 
    'totalEnergy': 11337748480.0, 'cpuTime': 323.100006103516, 
    'jobName': '1mmban', 'step': 1, 'increment': 8325, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 31357206528.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 16, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.425029397010803, 
    'stableTimeIncrement': 4.77516659884714e-05, 'stepTime': 0.425029397010803, 
    'totalEnergy': 11333956608.0, 'cpuTime': 343.399993896484, 
    'jobName': '1mmban', 'step': 1, 'increment': 8849, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 41507655680.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 17, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.450046896934509, 
    'stableTimeIncrement': 4.7751465899637e-05, 'stepTime': 0.450046896934509, 
    'totalEnergy': 11327921152.0, 'cpuTime': 363.799987792969, 
    'jobName': '1mmban', 'step': 1, 'increment': 9373, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 56371146752.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 18, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.47501665353775, 
    'stableTimeIncrement': 4.77293324365746e-05, 'stepTime': 0.47501665353775, 
    'totalEnergy': 11318962176.0, 'cpuTime': 384.200012207031, 
    'jobName': '1mmban', 'step': 1, 'increment': 9896, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 76422144000.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 19, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.5, 
    'stableTimeIncrement': 4.7751465899637e-05, 'stepTime': 0.5, 
    'totalEnergy': 11309673472.0, 'cpuTime': 404.600006103516, 
    'jobName': '1mmban', 'step': 1, 'increment': 10420, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 99997016064.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 20, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(COMPLETED, {'phase': EXPLICIT_PHASE, 
    'message': 'Phase complete', 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(JOB_COMPLETED, {'time': 'Fri Jan 10 22:50:21 2020', 
    'jobName': '1mmban'})
mdb.models['Model-1'].steps['Step-1'].setValues(timePeriod=0.1)
mdb.models['Model-1'].steps['Step-1'].setValues(timePeriod=0.01)
mdb.jobs['1mmban'].submit(consistencyChecking=OFF)
mdb.jobs['1mmban']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 0, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST NFORCSO IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST NFORCSO IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'BOUNDARY CONDITIONS ON DEGREES OF FREEDOM CONSTRAINED BY A TYPE BOUNDARY CONDITION ARE BEING REDEFINED ON AN INDIVIDUAL DEGREE OF FREEDOM BASIS', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 15108, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 6 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 7744, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 4.39741634181701e-05, 'stepTime': 0.0, 
    'totalEnergy': 11341298688.0, 'cpuTime': 1.10000002384186, 
    'jobName': '1mmban', 'step': 1, 'increment': 0, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 11341298688.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.000527689990121871, 
    'stableTimeIncrement': 4.88854457216803e-05, 
    'stepTime': 0.000527689990121871, 'totalEnergy': 11341298688.0, 
    'cpuTime': 1.70000004768372, 'jobName': '1mmban', 'step': 1, 
    'increment': 12, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341301760.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.00101335463114083, 
    'stableTimeIncrement': 4.8341738875024e-05, 
    'stepTime': 0.00101335463114083, 'totalEnergy': 11341298688.0, 
    'cpuTime': 2.20000004768372, 'jobName': '1mmban', 'step': 1, 
    'increment': 22, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341318144.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.00154443818610162, 
    'stableTimeIncrement': 4.82376563013531e-05, 
    'stepTime': 0.00154443818610162, 'totalEnergy': 11341298688.0, 
    'cpuTime': 2.70000004768372, 'jobName': '1mmban', 'step': 1, 
    'increment': 33, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341423616.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.00202669762074947, 
    'stableTimeIncrement': 4.82160758110695e-05, 
    'stepTime': 0.00202669762074947, 'totalEnergy': 11341298688.0, 
    'cpuTime': 3.20000004768372, 'jobName': '1mmban', 'step': 1, 
    'increment': 43, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341730816.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.00250881724059582, 
    'stableTimeIncrement': 4.82081886730157e-05, 
    'stepTime': 0.00250881724059582, 'totalEnergy': 11341299712.0, 
    'cpuTime': 3.70000004768372, 'jobName': '1mmban', 'step': 1, 
    'increment': 53, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11342436352.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.00303908484056592, 
    'stableTimeIncrement': 4.82041905343067e-05, 
    'stepTime': 0.00303908484056592, 'totalEnergy': 11341299712.0, 
    'cpuTime': 4.09999990463257, 'jobName': '1mmban', 'step': 1, 
    'increment': 64, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11344003072.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.00352111691609025, 
    'stableTimeIncrement': 4.82022296637297e-05, 
    'stepTime': 0.00352111691609025, 'totalEnergy': 11341299712.0, 
    'cpuTime': 4.59999990463257, 'jobName': '1mmban', 'step': 1, 
    'increment': 74, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11346505728.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.00400313315913081, 
    'stableTimeIncrement': 4.82010254927445e-05, 
    'stepTime': 0.00400313315913081, 'totalEnergy': 11341300736.0, 
    'cpuTime': 5.09999990463257, 'jobName': '1mmban', 'step': 1, 
    'increment': 84, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11350412288.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.00453333975747228, 
    'stableTimeIncrement': 4.82001632917672e-05, 
    'stepTime': 0.00453333975747228, 'totalEnergy': 11341300736.0, 
    'cpuTime': 5.69999980926514, 'jobName': '1mmban', 'step': 1, 
    'increment': 95, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11356533760.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.00501533877104521, 
    'stableTimeIncrement': 4.81996321468614e-05, 
    'stepTime': 0.00501533877104521, 'totalEnergy': 11341300736.0, 
    'cpuTime': 6.09999990463257, 'jobName': '1mmban', 'step': 1, 
    'increment': 105, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11363796992.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.00554553233087063, 
    'stableTimeIncrement': 4.81992174172774e-05, 
    'stepTime': 0.00554553233087063, 'totalEnergy': 11341300736.0, 
    'cpuTime': 6.59999990463257, 'jobName': '1mmban', 'step': 1, 
    'increment': 116, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11373720576.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 11, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.00602752389386296, 
    'stableTimeIncrement': 4.81989445688669e-05, 
    'stepTime': 0.00602752389386296, 'totalEnergy': 11341299712.0, 
    'cpuTime': 7.09999990463257, 'jobName': '1mmban', 'step': 1, 
    'increment': 126, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11384397824.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 12, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.00650951126590371, 
    'stableTimeIncrement': 4.81987299281172e-05, 
    'stepTime': 0.00650951126590371, 'totalEnergy': 11341299712.0, 
    'cpuTime': 7.59999990463257, 'jobName': '1mmban', 'step': 1, 
    'increment': 136, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11396406272.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 13, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.00703969737514853, 
    'stableTimeIncrement': 4.81985480291769e-05, 
    'stepTime': 0.00703969737514853, 'totalEnergy': 11341299712.0, 
    'cpuTime': 8.0, 'jobName': '1mmban', 'step': 1, 'increment': 147, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 11410856960.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 14, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.00752168148756027, 
    'stableTimeIncrement': 4.81984170619398e-05, 
    'stepTime': 0.00752168148756027, 'totalEnergy': 11341298688.0, 
    'cpuTime': 8.5, 'jobName': '1mmban', 'step': 1, 'increment': 157, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 11424861184.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 15, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0080036660656333, 
    'stableTimeIncrement': 4.81983079225756e-05, 
    'stepTime': 0.0080036660656333, 'totalEnergy': 11341298688.0, 
    'cpuTime': 9.0, 'jobName': '1mmban', 'step': 1, 'increment': 167, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 11439437824.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 16, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0085338456556201, 
    'stableTimeIncrement': 4.8198206059169e-05, 'stepTime': 0.0085338456556201, 
    'totalEnergy': 11341297664.0, 'cpuTime': 9.5, 'jobName': '1mmban', 
    'step': 1, 'increment': 178, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 11455896576.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 17, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0090158237144351, 
    'stableTimeIncrement': 4.81981332995929e-05, 
    'stepTime': 0.0090158237144351, 'totalEnergy': 11341297664.0, 
    'cpuTime': 9.89999961853027, 'jobName': '1mmban', 'step': 1, 
    'increment': 188, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11471147008.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 18, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0095459995791316, 
    'stableTimeIncrement': 4.81980605400167e-05, 
    'stepTime': 0.0095459995791316, 'totalEnergy': 11341296640.0, 
    'cpuTime': 10.3999996185303, 'jobName': '1mmban', 'step': 1, 
    'increment': 199, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11488144384.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 19, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.00999999977648258, 
    'stableTimeIncrement': 4.81980059703346e-05, 
    'stepTime': 0.00999999977648258, 'totalEnergy': 11341296640.0, 
    'cpuTime': 10.8999996185303, 'jobName': '1mmban', 'step': 1, 
    'increment': 209, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11502821376.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 20, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(COMPLETED, {'phase': EXPLICIT_PHASE, 
    'message': 'Phase complete', 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(JOB_COMPLETED, {'time': 'Fri Jan 10 22:57:13 2020', 
    'jobName': '1mmban'})
mdb.models['Model-1'].steps['Step-1'].setValues(timePeriod=0.001)
mdb.jobs['1mmban'].submit(consistencyChecking=OFF)
mdb.jobs['1mmban']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 0, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST NFORCSO IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST NFORCSO IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'BOUNDARY CONDITIONS ON DEGREES OF FREEDOM CONSTRAINED BY A TYPE BOUNDARY CONDITION ARE BEING REDEFINED ON AN INDIVIDUAL DEGREE OF FREEDOM BASIS', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 4984, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 6 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 14472, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 4.39741634181701e-05, 'stepTime': 0.0, 
    'totalEnergy': 11341298688.0, 'cpuTime': 1.10000002384186, 
    'jobName': '1mmban', 'step': 1, 'increment': 0, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 11341298688.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 8.79483268363401e-05, 
    'stableTimeIncrement': 4.39741634181701e-05, 
    'stepTime': 8.79483268363401e-05, 'totalEnergy': 11341298688.0, 
    'cpuTime': 1.29999995231628, 'jobName': '1mmban', 'step': 1, 
    'increment': 2, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341298688.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.000131922482978553, 
    'stableTimeIncrement': 4.39741634181701e-05, 
    'stepTime': 0.000131922482978553, 'totalEnergy': 11341298688.0, 
    'cpuTime': 1.5, 'jobName': '1mmban', 'step': 1, 'increment': 3, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341298688.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.00017589665367268, 
    'stableTimeIncrement': 4.39741634181701e-05, 
    'stepTime': 0.00017589665367268, 'totalEnergy': 11341298688.0, 
    'cpuTime': 1.60000002384186, 'jobName': '1mmban', 'step': 1, 
    'increment': 4, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341298688.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.000219870824366808, 
    'stableTimeIncrement': 4.39741634181701e-05, 
    'stepTime': 0.000219870824366808, 'totalEnergy': 11341298688.0, 
    'cpuTime': 1.70000004768372, 'jobName': '1mmban', 'step': 1, 
    'increment': 5, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341298688.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.000263844995060936, 
    'stableTimeIncrement': 4.39741634181701e-05, 
    'stepTime': 0.000263844995060936, 'totalEnergy': 11341298688.0, 
    'cpuTime': 1.89999997615814, 'jobName': '1mmban', 'step': 1, 
    'increment': 6, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341298688.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.000307819165755063, 
    'stableTimeIncrement': 4.39741634181701e-05, 
    'stepTime': 0.000307819165755063, 'totalEnergy': 11341298688.0, 
    'cpuTime': 2.0, 'jobName': '1mmban', 'step': 1, 'increment': 7, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341299712.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.000351793336449191, 
    'stableTimeIncrement': 4.39741634181701e-05, 
    'stepTime': 0.000351793336449191, 'totalEnergy': 11341298688.0, 
    'cpuTime': 2.09999990463257, 'jobName': '1mmban', 'step': 1, 
    'increment': 8, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341299712.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.000439741677837446, 
    'stableTimeIncrement': 4.39741634181701e-05, 
    'stepTime': 0.000439741677837446, 'totalEnergy': 11341298688.0, 
    'cpuTime': 2.29999995231628, 'jobName': '1mmban', 'step': 1, 
    'increment': 10, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341300736.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.000483715848531574, 
    'stableTimeIncrement': 4.39741634181701e-05, 
    'stepTime': 0.000483715848531574, 'totalEnergy': 11341298688.0, 
    'cpuTime': 2.5, 'jobName': '1mmban', 'step': 1, 'increment': 11, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341300736.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.000527689990121871, 
    'stableTimeIncrement': 4.88854457216803e-05, 
    'stepTime': 0.000527689990121871, 'totalEnergy': 11341298688.0, 
    'cpuTime': 2.59999990463257, 'jobName': '1mmban', 'step': 1, 
    'increment': 12, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341301760.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.000576575461309403, 
    'stableTimeIncrement': 4.87798279209528e-05, 
    'stepTime': 0.000576575461309403, 'totalEnergy': 11341298688.0, 
    'cpuTime': 2.70000004768372, 'jobName': '1mmban', 'step': 1, 
    'increment': 13, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341301760.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 11, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.000625355285592377, 
    'stableTimeIncrement': 4.86914505017921e-05, 
    'stepTime': 0.000625355285592377, 'totalEnergy': 11341298688.0, 
    'cpuTime': 2.79999995231628, 'jobName': '1mmban', 'step': 1, 
    'increment': 14, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341302784.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 12, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.000674046750646085, 
    'stableTimeIncrement': 4.86172393721063e-05, 
    'stepTime': 0.000674046750646085, 'totalEnergy': 11341298688.0, 
    'cpuTime': 3.0, 'jobName': '1mmban', 'step': 1, 'increment': 15, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341303808.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 13, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.000722664000932127, 
    'stableTimeIncrement': 4.85548553115223e-05, 
    'stepTime': 0.000722664000932127, 'totalEnergy': 11341298688.0, 
    'cpuTime': 3.09999990463257, 'jobName': '1mmban', 'step': 1, 
    'increment': 16, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341304832.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 14, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.000771218852605671, 
    'stableTimeIncrement': 4.8502395657124e-05, 
    'stepTime': 0.000771218852605671, 'totalEnergy': 11341298688.0, 
    'cpuTime': 3.20000004768372, 'jobName': '1mmban', 'step': 1, 
    'increment': 17, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341305856.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 15, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.000819721259176731, 
    'stableTimeIncrement': 4.84582888020668e-05, 
    'stepTime': 0.000819721259176731, 'totalEnergy': 11341298688.0, 
    'cpuTime': 3.29999995231628, 'jobName': '1mmban', 'step': 1, 
    'increment': 18, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341306880.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 16, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.000868179544340819, 
    'stableTimeIncrement': 4.84212177980226e-05, 
    'stepTime': 0.000868179544340819, 'totalEnergy': 11341298688.0, 
    'cpuTime': 3.40000009536743, 'jobName': '1mmban', 'step': 1, 
    'increment': 19, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341308928.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 17, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.000916600751224905, 
    'stableTimeIncrement': 4.83900475956034e-05, 
    'stepTime': 0.000916600751224905, 'totalEnergy': 11341298688.0, 
    'cpuTime': 3.5, 'jobName': '1mmban', 'step': 1, 'increment': 20, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341312000.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 18, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.000964990817010403, 
    'stableTimeIncrement': 4.83638177684043e-05, 
    'stepTime': 0.000964990817010403, 'totalEnergy': 11341298688.0, 
    'cpuTime': 3.70000004768372, 'jobName': '1mmban', 'step': 1, 
    'increment': 21, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341314048.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 19, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(STATUS, {'totalTime': 0.00100000004749745, 
    'stableTimeIncrement': 4.68246507807635e-05, 
    'stepTime': 0.00100000004749745, 'totalEnergy': 11341298688.0, 
    'cpuTime': 3.79999995231628, 'jobName': '1mmban', 'step': 1, 
    'increment': 22, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341317120.0})
mdb.jobs['1mmban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 20, 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(COMPLETED, {'phase': EXPLICIT_PHASE, 
    'message': 'Phase complete', 'jobName': '1mmban'})
mdb.jobs['1mmban']._Message(JOB_COMPLETED, {'time': 'Fri Jan 10 23:00:52 2020', 
    'jobName': '1mmban'})
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-qiu'].features['Solid revolve-1'].sketch)
mdb.models['Model-1'].parts['Part-qiu'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-qiu'].features['Solid revolve-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['ban'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['ban'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=mdb.models['Model-1'].parts['ban'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[0], ))
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -2.62174510955811, 0.78472900390625), value=2.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1])
mdb.models['Model-1'].parts['ban'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['ban'].regenerate()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs.changeKey(fromName='3mm-ban', toName='2mm-ban')
mdb.models['Model-1'].parts['ban'].generateMesh()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['2mm-ban'].submit(consistencyChecking=OFF)
mdb.jobs['2mm-ban']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 0, 'jobName': '2mm-ban'})
mdb.jobs['2mm-ban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST NFORCSO IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': '2mm-ban'})
mdb.jobs['2mm-ban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST NFORCSO IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': '2mm-ban'})
mdb.jobs['2mm-ban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '2mm-ban'})
mdb.jobs['2mm-ban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '2mm-ban'})
mdb.jobs['2mm-ban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': '2mm-ban'})
mdb.jobs['2mm-ban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'BOUNDARY CONDITIONS ON DEGREES OF FREEDOM CONSTRAINED BY A TYPE BOUNDARY CONDITION ARE BEING REDEFINED ON AN INDIVIDUAL DEGREE OF FREEDOM BASIS', 
    'jobName': '2mm-ban'})
mdb.jobs['2mm-ban']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '2mm-ban'})
mdb.jobs['2mm-ban']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 11480, 'jobName': '2mm-ban'})
mdb.jobs['2mm-ban']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 6 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': '2mm-ban'})
mdb.jobs['2mm-ban']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': '2mm-ban'})
mdb.jobs['2mm-ban']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 7748, 'jobName': '2mm-ban'})
mdb.jobs['2mm-ban']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 4.39741634181701e-05, 'stepTime': 0.0, 
    'totalEnergy': 11341298688.0, 'cpuTime': 1.10000002384186, 
    'jobName': '2mm-ban', 'step': 1, 'increment': 0, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 11341298688.0})
mdb.jobs['2mm-ban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '2mm-ban'})
mdb.jobs['2mm-ban']._Message(STATUS, {'totalTime': 8.79483268363401e-05, 
    'stableTimeIncrement': 4.39741634181701e-05, 
    'stepTime': 8.79483268363401e-05, 'totalEnergy': 11341298688.0, 
    'cpuTime': 1.29999995231628, 'jobName': '2mm-ban', 'step': 1, 
    'increment': 2, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341298688.0})
mdb.jobs['2mm-ban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '2mm-ban'})
mdb.jobs['2mm-ban']._Message(STATUS, {'totalTime': 0.000131922482978553, 
    'stableTimeIncrement': 4.39741634181701e-05, 
    'stepTime': 0.000131922482978553, 'totalEnergy': 11341298688.0, 
    'cpuTime': 1.39999997615814, 'jobName': '2mm-ban', 'step': 1, 
    'increment': 3, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341298688.0})
mdb.jobs['2mm-ban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': '2mm-ban'})
mdb.jobs['2mm-ban']._Message(STATUS, {'totalTime': 0.00017589665367268, 
    'stableTimeIncrement': 4.39741634181701e-05, 
    'stepTime': 0.00017589665367268, 'totalEnergy': 11341298688.0, 
    'cpuTime': 1.60000002384186, 'jobName': '2mm-ban', 'step': 1, 
    'increment': 4, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341298688.0})
mdb.jobs['2mm-ban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': '2mm-ban'})
mdb.jobs['2mm-ban']._Message(STATUS, {'totalTime': 0.000219870824366808, 
    'stableTimeIncrement': 4.39741634181701e-05, 
    'stepTime': 0.000219870824366808, 'totalEnergy': 11341298688.0, 
    'cpuTime': 1.70000004768372, 'jobName': '2mm-ban', 'step': 1, 
    'increment': 5, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341298688.0})
mdb.jobs['2mm-ban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': '2mm-ban'})
mdb.jobs['2mm-ban']._Message(STATUS, {'totalTime': 0.000263844995060936, 
    'stableTimeIncrement': 4.39741634181701e-05, 
    'stepTime': 0.000263844995060936, 'totalEnergy': 11341298688.0, 
    'cpuTime': 1.79999995231628, 'jobName': '2mm-ban', 'step': 1, 
    'increment': 6, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341298688.0})
mdb.jobs['2mm-ban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': '2mm-ban'})
mdb.jobs['2mm-ban']._Message(STATUS, {'totalTime': 0.000307819165755063, 
    'stableTimeIncrement': 4.39741634181701e-05, 
    'stepTime': 0.000307819165755063, 'totalEnergy': 11341298688.0, 
    'cpuTime': 2.0, 'jobName': '2mm-ban', 'step': 1, 'increment': 7, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341298688.0})
mdb.jobs['2mm-ban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': '2mm-ban'})
mdb.jobs['2mm-ban']._Message(STATUS, {'totalTime': 0.000351793336449191, 
    'stableTimeIncrement': 4.39741634181701e-05, 
    'stepTime': 0.000351793336449191, 'totalEnergy': 11341298688.0, 
    'cpuTime': 2.09999990463257, 'jobName': '2mm-ban', 'step': 1, 
    'increment': 8, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341298688.0})
mdb.jobs['2mm-ban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': '2mm-ban'})
mdb.jobs['2mm-ban']._Message(STATUS, {'totalTime': 0.000439741677837446, 
    'stableTimeIncrement': 4.39741634181701e-05, 
    'stepTime': 0.000439741677837446, 'totalEnergy': 11341298688.0, 
    'cpuTime': 2.20000004768372, 'jobName': '2mm-ban', 'step': 1, 
    'increment': 10, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341299712.0})
mdb.jobs['2mm-ban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': '2mm-ban'})
mdb.jobs['2mm-ban']._Message(STATUS, {'totalTime': 0.000483715848531574, 
    'stableTimeIncrement': 4.39741634181701e-05, 
    'stepTime': 0.000483715848531574, 'totalEnergy': 11341298688.0, 
    'cpuTime': 2.40000009536743, 'jobName': '2mm-ban', 'step': 1, 
    'increment': 11, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341299712.0})
mdb.jobs['2mm-ban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': '2mm-ban'})
mdb.jobs['2mm-ban']._Message(STATUS, {'totalTime': 0.000527689990121871, 
    'stableTimeIncrement': 4.39741634181701e-05, 
    'stepTime': 0.000527689990121871, 'totalEnergy': 11341298688.0, 
    'cpuTime': 2.5, 'jobName': '2mm-ban', 'step': 1, 'increment': 12, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341300736.0})
mdb.jobs['2mm-ban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': '2mm-ban'})
mdb.jobs['2mm-ban']._Message(STATUS, {'totalTime': 0.000571664131712168, 
    'stableTimeIncrement': 5.27689990121871e-05, 
    'stepTime': 0.000571664131712168, 'totalEnergy': 11341298688.0, 
    'cpuTime': 2.70000004768372, 'jobName': '2mm-ban', 'step': 1, 
    'increment': 13, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341300736.0})
mdb.jobs['2mm-ban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 11, 'jobName': '2mm-ban'})
mdb.jobs['2mm-ban']._Message(STATUS, {'totalTime': 0.000615430937614292, 
    'stableTimeIncrement': 6.33228046353906e-05, 
    'stepTime': 0.000615430937614292, 'totalEnergy': 11341298688.0, 
    'cpuTime': 2.79999995231628, 'jobName': '2mm-ban', 'step': 1, 
    'increment': 14, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341301760.0})
mdb.jobs['2mm-ban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 12, 'jobName': '2mm-ban'})
mdb.jobs['2mm-ban']._Message(STATUS, {'totalTime': 0.000658990349620581, 
    'stableTimeIncrement': 7.59873655624688e-05, 
    'stepTime': 0.000658990349620581, 'totalEnergy': 11341298688.0, 
    'cpuTime': 2.90000009536743, 'jobName': '2mm-ban', 'step': 1, 
    'increment': 15, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341301760.0})
mdb.jobs['2mm-ban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 13, 'jobName': '2mm-ban'})
mdb.jobs['2mm-ban']._Message(STATUS, {'totalTime': 0.000702342367731035, 
    'stableTimeIncrement': 9.1184840130154e-05, 
    'stepTime': 0.000702342367731035, 'totalEnergy': 11341298688.0, 
    'cpuTime': 3.0, 'jobName': '2mm-ban', 'step': 1, 'increment': 16, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341302784.0})
mdb.jobs['2mm-ban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 14, 'jobName': '2mm-ban'})
mdb.jobs['2mm-ban']._Message(STATUS, {'totalTime': 0.000788424338679761, 
    'stableTimeIncrement': 9.68197782640345e-05, 
    'stepTime': 0.000788424338679761, 'totalEnergy': 11341298688.0, 
    'cpuTime': 3.20000004768372, 'jobName': '2mm-ban', 'step': 1, 
    'increment': 18, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341304832.0})
mdb.jobs['2mm-ban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 15, 'jobName': '2mm-ban'})
mdb.jobs['2mm-ban']._Message(STATUS, {'totalTime': 0.000831154233310372, 
    'stableTimeIncrement': 9.67554442468099e-05, 
    'stepTime': 0.000831154233310372, 'totalEnergy': 11341298688.0, 
    'cpuTime': 3.29999995231628, 'jobName': '2mm-ban', 'step': 1, 
    'increment': 19, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341305856.0})
mdb.jobs['2mm-ban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 16, 'jobName': '2mm-ban'})
mdb.jobs['2mm-ban']._Message(STATUS, {'totalTime': 0.000873676792252809, 
    'stableTimeIncrement': 9.67033265624195e-05, 
    'stepTime': 0.000873676792252809, 'totalEnergy': 11341298688.0, 
    'cpuTime': 3.40000009536743, 'jobName': '2mm-ban', 'step': 1, 
    'increment': 20, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341306880.0})
mdb.jobs['2mm-ban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 17, 'jobName': '2mm-ban'})
mdb.jobs['2mm-ban']._Message(STATUS, {'totalTime': 0.000915991957299411, 
    'stableTimeIncrement': 9.6660791314207e-05, 
    'stepTime': 0.000915991957299411, 'totalEnergy': 11341298688.0, 
    'cpuTime': 3.59999990463257, 'jobName': '2mm-ban', 'step': 1, 
    'increment': 21, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341308928.0})
mdb.jobs['2mm-ban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 18, 'jobName': '2mm-ban'})
mdb.jobs['2mm-ban']._Message(STATUS, {'totalTime': 0.00100000004749745, 
    'stableTimeIncrement': 9.66257939580828e-05, 
    'stepTime': 0.00100000004749745, 'totalEnergy': 11341298688.0, 
    'cpuTime': 3.70000004768372, 'jobName': '2mm-ban', 'step': 1, 
    'increment': 22, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341312000.0})
mdb.jobs['2mm-ban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 19, 'jobName': '2mm-ban'})
mdb.jobs['2mm-ban']._Message(COMPLETED, {'phase': EXPLICIT_PHASE, 
    'message': 'Phase complete', 'jobName': '2mm-ban'})
mdb.jobs['2mm-ban']._Message(JOB_COMPLETED, {
    'time': 'Fri Jan 10 23:05:45 2020', 'jobName': '2mm-ban'})
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['ban'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['ban'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=mdb.models['Model-1'].parts['ban'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[2], ))
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -1.99166488647461, 0.397843837738037), value=3.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1])
mdb.models['Model-1'].parts['ban'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['ban'].regenerate()
mdb.models['Model-1'].parts['ban'].generateMesh()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.Job(activateLoadBalancing=False, atTime=None, contactPrint=OFF, 
    description='', echoPrint=OFF, explicitPrecision=SINGLE, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='3mm-ban', nodalOutputPrecision=SINGLE, 
    numCpus=1, numDomains=1, parallelizationMethodExplicit=DOMAIN, queue=None, 
    resultsFormat=ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=
    0, waitMinutes=0)
mdb.jobs['3mm-ban'].submit(consistencyChecking=OFF)
mdb.jobs['3mm-ban']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 0, 'jobName': '3mm-ban'})
mdb.jobs['3mm-ban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST NFORCSO IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': '3mm-ban'})
mdb.jobs['3mm-ban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST NFORCSO IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': '3mm-ban'})
mdb.jobs['3mm-ban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '3mm-ban'})
mdb.jobs['3mm-ban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '3mm-ban'})
mdb.jobs['3mm-ban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': '3mm-ban'})
mdb.jobs['3mm-ban']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'BOUNDARY CONDITIONS ON DEGREES OF FREEDOM CONSTRAINED BY A TYPE BOUNDARY CONDITION ARE BEING REDEFINED ON AN INDIVIDUAL DEGREE OF FREEDOM BASIS', 
    'jobName': '3mm-ban'})
mdb.jobs['3mm-ban']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '3mm-ban'})
mdb.jobs['3mm-ban']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 13988, 'jobName': '3mm-ban'})
mdb.jobs['3mm-ban']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 6 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': '3mm-ban'})
mdb.jobs['3mm-ban']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': '3mm-ban'})
mdb.jobs['3mm-ban']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 9212, 'jobName': '3mm-ban'})
mdb.jobs['3mm-ban']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 4.39741634181701e-05, 'stepTime': 0.0, 
    'totalEnergy': 11341298688.0, 'cpuTime': 1.10000002384186, 
    'jobName': '3mm-ban', 'step': 1, 'increment': 0, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 11341298688.0})
mdb.jobs['3mm-ban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '3mm-ban'})
mdb.jobs['3mm-ban']._Message(STATUS, {'totalTime': 8.79483268363401e-05, 
    'stableTimeIncrement': 4.39741634181701e-05, 
    'stepTime': 8.79483268363401e-05, 'totalEnergy': 11341298688.0, 
    'cpuTime': 1.20000004768372, 'jobName': '3mm-ban', 'step': 1, 
    'increment': 2, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341298688.0})
mdb.jobs['3mm-ban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '3mm-ban'})
mdb.jobs['3mm-ban']._Message(STATUS, {'totalTime': 0.000131922482978553, 
    'stableTimeIncrement': 4.39741634181701e-05, 
    'stepTime': 0.000131922482978553, 'totalEnergy': 11341298688.0, 
    'cpuTime': 1.29999995231628, 'jobName': '3mm-ban', 'step': 1, 
    'increment': 3, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341298688.0})
mdb.jobs['3mm-ban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': '3mm-ban'})
mdb.jobs['3mm-ban']._Message(STATUS, {'totalTime': 0.00017589665367268, 
    'stableTimeIncrement': 4.39741634181701e-05, 
    'stepTime': 0.00017589665367268, 'totalEnergy': 11341298688.0, 
    'cpuTime': 1.5, 'jobName': '3mm-ban', 'step': 1, 'increment': 4, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341298688.0})
mdb.jobs['3mm-ban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': '3mm-ban'})
mdb.jobs['3mm-ban']._Message(STATUS, {'totalTime': 0.000219870824366808, 
    'stableTimeIncrement': 4.39741634181701e-05, 
    'stepTime': 0.000219870824366808, 'totalEnergy': 11341298688.0, 
    'cpuTime': 1.60000002384186, 'jobName': '3mm-ban', 'step': 1, 
    'increment': 5, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341298688.0})
mdb.jobs['3mm-ban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': '3mm-ban'})
mdb.jobs['3mm-ban']._Message(STATUS, {'totalTime': 0.000263844995060936, 
    'stableTimeIncrement': 4.39741634181701e-05, 
    'stepTime': 0.000263844995060936, 'totalEnergy': 11341298688.0, 
    'cpuTime': 1.70000004768372, 'jobName': '3mm-ban', 'step': 1, 
    'increment': 6, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341298688.0})
mdb.jobs['3mm-ban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': '3mm-ban'})
mdb.jobs['3mm-ban']._Message(STATUS, {'totalTime': 0.000307819165755063, 
    'stableTimeIncrement': 4.39741634181701e-05, 
    'stepTime': 0.000307819165755063, 'totalEnergy': 11341298688.0, 
    'cpuTime': 1.79999995231628, 'jobName': '3mm-ban', 'step': 1, 
    'increment': 7, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341298688.0})
mdb.jobs['3mm-ban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': '3mm-ban'})
mdb.jobs['3mm-ban']._Message(STATUS, {'totalTime': 0.000351793336449191, 
    'stableTimeIncrement': 4.39741634181701e-05, 
    'stepTime': 0.000351793336449191, 'totalEnergy': 11341298688.0, 
    'cpuTime': 1.89999997615814, 'jobName': '3mm-ban', 'step': 1, 
    'increment': 8, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341298688.0})
mdb.jobs['3mm-ban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': '3mm-ban'})
mdb.jobs['3mm-ban']._Message(STATUS, {'totalTime': 0.000439741677837446, 
    'stableTimeIncrement': 4.39741634181701e-05, 
    'stepTime': 0.000439741677837446, 'totalEnergy': 11341298688.0, 
    'cpuTime': 2.09999990463257, 'jobName': '3mm-ban', 'step': 1, 
    'increment': 10, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341299712.0})
mdb.jobs['3mm-ban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': '3mm-ban'})
mdb.jobs['3mm-ban']._Message(STATUS, {'totalTime': 0.000483715848531574, 
    'stableTimeIncrement': 4.39741634181701e-05, 
    'stepTime': 0.000483715848531574, 'totalEnergy': 11341298688.0, 
    'cpuTime': 2.20000004768372, 'jobName': '3mm-ban', 'step': 1, 
    'increment': 11, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341299712.0})
mdb.jobs['3mm-ban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': '3mm-ban'})
mdb.jobs['3mm-ban']._Message(STATUS, {'totalTime': 0.000527689990121871, 
    'stableTimeIncrement': 4.39741634181701e-05, 
    'stepTime': 0.000527689990121871, 'totalEnergy': 11341298688.0, 
    'cpuTime': 2.29999995231628, 'jobName': '3mm-ban', 'step': 1, 
    'increment': 12, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341299712.0})
mdb.jobs['3mm-ban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': '3mm-ban'})
mdb.jobs['3mm-ban']._Message(STATUS, {'totalTime': 0.000571664131712168, 
    'stableTimeIncrement': 4.39741634181701e-05, 
    'stepTime': 0.000571664131712168, 'totalEnergy': 11341298688.0, 
    'cpuTime': 2.40000009536743, 'jobName': '3mm-ban', 'step': 1, 
    'increment': 13, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341300736.0})
mdb.jobs['3mm-ban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 11, 'jobName': '3mm-ban'})
mdb.jobs['3mm-ban']._Message(STATUS, {'totalTime': 0.000615430937614292, 
    'stableTimeIncrement': 5.27689990121871e-05, 
    'stepTime': 0.000615430937614292, 'totalEnergy': 11341298688.0, 
    'cpuTime': 2.5, 'jobName': '3mm-ban', 'step': 1, 'increment': 14, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341300736.0})
mdb.jobs['3mm-ban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 12, 'jobName': '3mm-ban'})
mdb.jobs['3mm-ban']._Message(STATUS, {'totalTime': 0.000658990349620581, 
    'stableTimeIncrement': 6.33228046353906e-05, 
    'stepTime': 0.000658990349620581, 'totalEnergy': 11341298688.0, 
    'cpuTime': 2.59999990463257, 'jobName': '3mm-ban', 'step': 1, 
    'increment': 15, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341301760.0})
mdb.jobs['3mm-ban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 13, 'jobName': '3mm-ban'})
mdb.jobs['3mm-ban']._Message(STATUS, {'totalTime': 0.000702342367731035, 
    'stableTimeIncrement': 7.59873655624688e-05, 
    'stepTime': 0.000702342367731035, 'totalEnergy': 11341298688.0, 
    'cpuTime': 2.79999995231628, 'jobName': '3mm-ban', 'step': 1, 
    'increment': 16, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341301760.0})
mdb.jobs['3mm-ban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 14, 'jobName': '3mm-ban'})
mdb.jobs['3mm-ban']._Message(STATUS, {'totalTime': 0.000788424338679761, 
    'stableTimeIncrement': 9.83680947683752e-05, 
    'stepTime': 0.000788424338679761, 'totalEnergy': 11341298688.0, 
    'cpuTime': 2.90000009536743, 'jobName': '3mm-ban', 'step': 1, 
    'increment': 18, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341303808.0})
mdb.jobs['3mm-ban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 15, 'jobName': '3mm-ban'})
mdb.jobs['3mm-ban']._Message(STATUS, {'totalTime': 0.000831154233310372, 
    'stableTimeIncrement': 9.82880883384496e-05, 
    'stepTime': 0.000831154233310372, 'totalEnergy': 11341298688.0, 
    'cpuTime': 3.0, 'jobName': '3mm-ban', 'step': 1, 'increment': 19, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341304832.0})
mdb.jobs['3mm-ban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 16, 'jobName': '3mm-ban'})
mdb.jobs['3mm-ban']._Message(STATUS, {'totalTime': 0.000873676792252809, 
    'stableTimeIncrement': 9.82183992164209e-05, 
    'stepTime': 0.000873676792252809, 'totalEnergy': 11341298688.0, 
    'cpuTime': 3.20000004768372, 'jobName': '3mm-ban', 'step': 1, 
    'increment': 20, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341306880.0})
mdb.jobs['3mm-ban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 17, 'jobName': '3mm-ban'})
mdb.jobs['3mm-ban']._Message(STATUS, {'totalTime': 0.000915991957299411, 
    'stableTimeIncrement': 9.81572229648009e-05, 
    'stepTime': 0.000915991957299411, 'totalEnergy': 11341298688.0, 
    'cpuTime': 3.29999995231628, 'jobName': '3mm-ban', 'step': 1, 
    'increment': 21, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341307904.0})
mdb.jobs['3mm-ban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 18, 'jobName': '3mm-ban'})
mdb.jobs['3mm-ban']._Message(STATUS, {'totalTime': 0.00100000004749745, 
    'stableTimeIncrement': 9.81032499112189e-05, 
    'stepTime': 0.00100000004749745, 'totalEnergy': 11341298688.0, 
    'cpuTime': 3.40000009536743, 'jobName': '3mm-ban', 'step': 1, 
    'increment': 22, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 11341310976.0})
mdb.jobs['3mm-ban']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 19, 'jobName': '3mm-ban'})
mdb.jobs['3mm-ban']._Message(COMPLETED, {'phase': EXPLICIT_PHASE, 
    'message': 'Phase complete', 'jobName': '3mm-ban'})
mdb.jobs['3mm-ban']._Message(JOB_COMPLETED, {
    'time': 'Fri Jan 10 23:08:25 2020', 'jobName': '3mm-ban'})
# Save by XLH on 2020_01_10-23.32.01; build 2016 2015_09_25-04.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['Part-qiu'].deleteMesh(regions=
    mdb.models['Model-1'].parts['Part-qiu'].cells.getSequenceFromMask(('[#f ]', 
    ), ))
mdb.models['Model-1'].parts['Part-qiu'].seedEdgeByNumber(constraint=FINER, 
    edges=mdb.models['Model-1'].parts['Part-qiu'].edges.getSequenceFromMask((
    '[#1910 ]', ), ), number=20)
mdb.models['Model-1'].parts['Part-qiu'].seedEdgeByNumber(constraint=FINER, 
    edges=mdb.models['Model-1'].parts['Part-qiu'].edges.getSequenceFromMask((
    '[#1910 ]', ), ), number=15)
mdb.models['Model-1'].parts['Part-qiu'].generateMesh()
mdb.models['Model-1'].parts['Part-qiu'].deleteMesh(regions=
    mdb.models['Model-1'].parts['Part-qiu'].cells.getSequenceFromMask(('[#f ]', 
    ), ))
mdb.models['Model-1'].parts['Part-qiu'].seedEdgeByNumber(constraint=FINER, 
    edges=mdb.models['Model-1'].parts['Part-qiu'].edges.getSequenceFromMask((
    '[#1910 ]', ), ), number=10)
mdb.models['Model-1'].parts['Part-qiu'].generateMesh()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.Job(activateLoadBalancing=False, atTime=None, contactPrint=OFF, 
    description='', echoPrint=OFF, explicitPrecision=SINGLE, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='3mm', nodalOutputPrecision=SINGLE, 
    numCpus=1, numDomains=1, parallelizationMethodExplicit=DOMAIN, queue=None, 
    resultsFormat=ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=
    0, waitMinutes=0)
mdb.jobs['3mm'].submit(consistencyChecking=OFF)
mdb.jobs['3mm']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 0, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST NFORCSO IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST NFORCSO IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'BOUNDARY CONDITIONS ON DEGREES OF FREEDOM CONSTRAINED BY A TYPE BOUNDARY CONDITION ARE BEING REDEFINED ON AN INDIVIDUAL DEGREE OF FREEDOM BASIS', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 3972, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 6 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': '3mm'})
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-qiu'].features['Solid revolve-1'].sketch)
mdb.models['Model-1'].parts['Part-qiu'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-qiu'].features['Solid revolve-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.jobs['3mm']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 7216, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 4.50555489805993e-05, 'stepTime': 0.0, 
    'totalEnergy': 11336060928.0, 'cpuTime': 0.600000023841858, 
    'jobName': '3mm', 'step': 1, 'increment': 0, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 11336060928.0})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 9.01110979611985e-05, 
    'stableTimeIncrement': 4.50555489805993e-05, 
    'stepTime': 9.01110979611985e-05, 'totalEnergy': 11336060928.0, 
    'cpuTime': 0.800000011920929, 'jobName': '3mm', 'step': 1, 'increment': 2, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 11336060928.0})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.000135166643303819, 
    'stableTimeIncrement': 4.50555489805993e-05, 
    'stepTime': 0.000135166643303819, 'totalEnergy': 11336060928.0, 
    'cpuTime': 0.800000011920929, 'jobName': '3mm', 'step': 1, 'increment': 3, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 11336060928.0})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.000180222195922397, 
    'stableTimeIncrement': 4.50555489805993e-05, 
    'stepTime': 0.000180222195922397, 'totalEnergy': 11336060928.0, 
    'cpuTime': 0.899999976158142, 'jobName': '3mm', 'step': 1, 'increment': 4, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 11336060928.0})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.000225277748540975, 
    'stableTimeIncrement': 4.50555489805993e-05, 
    'stepTime': 0.000225277748540975, 'totalEnergy': 11336060928.0, 
    'cpuTime': 1.0, 'jobName': '3mm', 'step': 1, 'increment': 5, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 11336060928.0})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.000270333286607638, 
    'stableTimeIncrement': 4.50555489805993e-05, 
    'stepTime': 0.000270333286607638, 'totalEnergy': 11336060928.0, 
    'cpuTime': 1.10000002384186, 'jobName': '3mm', 'step': 1, 'increment': 6, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 11336060928.0})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.000315388839226216, 
    'stableTimeIncrement': 4.50555489805993e-05, 
    'stepTime': 0.000315388839226216, 'totalEnergy': 11336060928.0, 
    'cpuTime': 1.10000002384186, 'jobName': '3mm', 'step': 1, 'increment': 7, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 11336060928.0})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.000360444391844794, 
    'stableTimeIncrement': 4.50555489805993e-05, 
    'stepTime': 0.000360444391844794, 'totalEnergy': 11336060928.0, 
    'cpuTime': 1.20000004768372, 'jobName': '3mm', 'step': 1, 'increment': 8, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 11336061952.0})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.000405499944463372, 
    'stableTimeIncrement': 4.50555489805993e-05, 
    'stepTime': 0.000405499944463372, 'totalEnergy': 11336060928.0, 
    'cpuTime': 1.29999995231628, 'jobName': '3mm', 'step': 1, 'increment': 9, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 11336061952.0})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.00045055549708195, 
    'stableTimeIncrement': 4.50555489805993e-05, 
    'stepTime': 0.00045055549708195, 'totalEnergy': 11336060928.0, 
    'cpuTime': 1.39999997615814, 'jobName': '3mm', 'step': 1, 'increment': 10, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 11336062976.0})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.000540666573215276, 
    'stableTimeIncrement': 5.40666624146979e-05, 
    'stepTime': 0.000540666573215276, 'totalEnergy': 11336060928.0, 
    'cpuTime': 1.39999997615814, 'jobName': '3mm', 'step': 1, 'increment': 12, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 11336064000.0})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.000594733224716038, 
    'stableTimeIncrement': 6.48799978080206e-05, 
    'stepTime': 0.000594733224716038, 'totalEnergy': 11336060928.0, 
    'cpuTime': 1.5, 'jobName': '3mm', 'step': 1, 'increment': 13, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 11336066048.0})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 11, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.000659613229800016, 
    'stableTimeIncrement': 7.78559988248162e-05, 
    'stepTime': 0.000659613229800016, 'totalEnergy': 11336060928.0, 
    'cpuTime': 1.60000002384186, 'jobName': '3mm', 'step': 1, 'increment': 14, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 11336068096.0})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 12, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.00073746923590079, 
    'stableTimeIncrement': 9.3427202955354e-05, 
    'stepTime': 0.00073746923590079, 'totalEnergy': 11336060928.0, 
    'cpuTime': 1.70000004768372, 'jobName': '3mm', 'step': 1, 'increment': 15, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 11336071168.0})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 13, 'jobName': '3mm'})
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['ban'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['ban'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=mdb.models['Model-1'].parts['ban'].features['Solid extrude-1'])
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.000830896431580186, 
    'stableTimeIncrement': 0.000102513018646277, 
    'stepTime': 0.000830896431580186, 'totalEnergy': 11336060928.0, 
    'cpuTime': 1.70000004768372, 'jobName': '3mm', 'step': 1, 'increment': 16, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 11336075264.0})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 14, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.000933409435674548, 
    'stableTimeIncrement': 0.000102492638689, 'stepTime': 0.000933409435674548, 
    'totalEnergy': 11336060928.0, 'cpuTime': 1.89999997615814, 
    'jobName': '3mm', 'step': 1, 'increment': 17, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 11336080384.0})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 15, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.00100000004749745, 
    'stableTimeIncrement': 0.000102475649327971, 
    'stepTime': 0.00100000004749745, 'totalEnergy': 11336060928.0, 
    'cpuTime': 1.89999997615814, 'jobName': '3mm', 'step': 1, 'increment': 18, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 11336084480.0})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 16, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(COMPLETED, {'phase': EXPLICIT_PHASE, 
    'message': 'Phase complete', 'jobName': '3mm'})
mdb.jobs['3mm']._Message(JOB_COMPLETED, {'time': 'Sat Jan 11 00:52:08 2020', 
    'jobName': '3mm'})
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].steps['Step-1'].setValues(scaleFactor=0.01, timePeriod=
    1.0)
mdb.jobs['3mm'].submit(consistencyChecking=OFF)
mdb.jobs['3mm']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 0, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST NFORCSO IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST NFORCSO IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'BOUNDARY CONDITIONS ON DEGREES OF FREEDOM CONSTRAINED BY A TYPE BOUNDARY CONDITION ARE BEING REDEFINED ON AN INDIVIDUAL DEGREE OF FREEDOM BASIS', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 13556, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 6 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 4128, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 4.50555489805993e-07, 'stepTime': 0.0, 
    'totalEnergy': 11336060928.0, 'cpuTime': 0.600000023841858, 
    'jobName': '3mm', 'step': 1, 'increment': 0, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 11336060928.0})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.00536886928603053, 
    'stableTimeIncrement': 1.01675902897114e-06, 
    'stepTime': 0.00536886928603053, 'totalEnergy': 11336060928.0, 
    'cpuTime': 120.0, 'jobName': '3mm', 'step': 1, 'increment': 5288, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 11343540224.0})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.0107741449028254, 
    'stableTimeIncrement': 1.0167589152843e-06, 'stepTime': 0.0107741449028254, 
    'totalEnergy': 11336060928.0, 'cpuTime': 240.0, 'jobName': '3mm', 
    'step': 1, 'increment': 10604, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 11475910656.0})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.0161876585334539, 
    'stableTimeIncrement': 1.0167589152843e-06, 'stepTime': 0.0161876585334539, 
    'totalEnergy': 11336060928.0, 'cpuTime': 360.0, 'jobName': '3mm', 
    'step': 1, 'increment': 15927, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 11944930304.0})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.0216032061725855, 
    'stableTimeIncrement': 1.01675880159746e-06, 
    'stepTime': 0.0216032061725855, 'totalEnergy': 11336058880.0, 
    'cpuTime': 480.0, 'jobName': '3mm', 'step': 1, 'increment': 21252, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 12693532672.0})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.0270096007734537, 
    'stableTimeIncrement': 1.01675834685011e-06, 
    'stepTime': 0.0270096007734537, 'totalEnergy': 11336058880.0, 
    'cpuTime': 600.0, 'jobName': '3mm', 'step': 1, 'increment': 26568, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 13595384832.0})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.0324231125414371, 
    'stableTimeIncrement': 1.01675868791062e-06, 
    'stepTime': 0.0324231125414371, 'totalEnergy': 11336054784.0, 
    'cpuTime': 720.0, 'jobName': '3mm', 'step': 1, 'increment': 31891, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 14565853184.0})
# Save by XLH on 2020_01_11-01.06.14; build 2016 2015_09_25-04.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.0378325581550598, 
    'stableTimeIncrement': 1.01675811947644e-06, 
    'stepTime': 0.0378325581550598, 'totalEnergy': 11336055808.0, 
    'cpuTime': 840.0, 'jobName': '3mm', 'step': 1, 'increment': 37210, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 15558203392.0})
# Save by XLH on 2020_01_11-01.08.23; build 2016 2015_09_25-04.31.09 126547
# Save by XLH on 2020_01_11-01.08.24; build 2016 2015_09_25-04.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['ban'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['ban'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=mdb.models['Model-1'].parts['ban'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-qiu'].features['Solid revolve-1'].sketch)
mdb.models['Model-1'].parts['Part-qiu'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-qiu'].features['Solid revolve-1'])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[0], ))
mdb.models['Model-1'].sketches['__edit__'].VerticalDimension(textPoint=(
    -4.06157779693604, 6.61258220672607), value=0.042, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-qiu'].features['Solid revolve-1'].sketch)
mdb.models['Model-1'].parts['Part-qiu'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-qiu'].features['Solid revolve-1'])
mdb.models['Model-1'].sketches['__edit__'].scale(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[2], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[4], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[5]), scaleCenter=(0.0, 
    0.0), scaleValue=0.001)
mdb.models['Model-1'].parts['Part-qiu'].features['Solid revolve-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Part-qiu'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['ban'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['ban'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=mdb.models['Model-1'].parts['ban'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[1], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[3], ))
mdb.models['Model-1'].sketches['__edit__'].scale(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[2], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[3], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[4], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[5]), scaleCenter=(0.0, 
    1.0), scaleValue=0.001)
mdb.models['Model-1'].parts['ban'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['ban'].regenerate()
mdb.models['Model-1'].parts['ban'].features['Solid extrude-1'].setValues(depth=
    0.1)
mdb.models['Model-1'].parts['ban'].regenerate()
mdb.models['Model-1'].parts['ban'].regenerate()
mdb.models['Model-1'].parts['ban'].regenerate()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].parts['ban'].MaterialOrientation(additionalRotationType=
    ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=None, orientationType=
    GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['ban'].cells.getSequenceFromMask(mask=(
    '[#1 ]', ), )), stackDirection=STACK_3)
del mdb.models['Model-1'].parts['ban'].materialOrientations[0]
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.translate(instanceList=('ban-1', ), vector=(
    -0.025, -0.997, -0.09))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-qiu-1', ), 
    vector=(-49.975, -0.997, -50.04))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('ban-1', ), vector=(
    0.025, -0.003, 0.04))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-qiu-1', ), 
    vector=(0.025, -0.003, 0.04))
mdb.models['Model-1'].parts['Part-qiu'].generateMesh()
mdb.models['Model-1'].parts['ban'].generateMesh()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['ban'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['ban'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=mdb.models['Model-1'].parts['ban'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    0.0399029701948166, 0.998365759849548), value=0.003, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[3])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    0.0169704016298056, 1.00178039073944), value=0.05, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2])
mdb.models['Model-1'].parts['ban'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['ban'].regenerate()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].steps['Step-1'].setValues(scaleFactor=0.1)
mdb.jobs['3mm'].submit(consistencyChecking=OFF)
mdb.jobs['3mm']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 0, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST NFORCSO IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST NFORCSO IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'BOUNDARY CONDITIONS ON DEGREES OF FREEDOM CONSTRAINED BY A TYPE BOUNDARY CONDITION ARE BEING REDEFINED ON AN INDIVIDUAL DEGREE OF FREEDOM BASIS', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 5688, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 6 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 1812, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.22340457764381e-08, 'stepTime': 0.0, 
    'totalEnergy': 11.0380373001099, 'cpuTime': 0.0, 'jobName': '3mm', 
    'step': 1, 'increment': 0, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 11.0380373001099})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'THE ANALYSIS MAY NEED A LARGE NUMBER OF INCREMENTS (MORE THAN 20,000,000), AND IT MAY BE AFFECTED BY ROUND-OFF ERRORS. FOR ACCURACY, RUNNING DOUBLE PRECISION EXECUTABLE IS REQUIRED.', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'Mechanical penalty contact between surfaces ASSEMBLY_BAN-1_SURF-1 and ASSEMBLY_SURF-QIU is causing a 99.999% reduction in the time increment.', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 1.22340564345791e-08, 
    'stableTimeIncrement': 9.9999998245167e-15, 
    'stepTime': 1.22340564345791e-08, 'totalEnergy': 11.0380373001099, 
    'cpuTime': 0.100000001490116, 'jobName': '3mm', 'step': 1, 'increment': 2, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 11.0380373001099})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(ABORTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis failed due to Errors', 'jobName': '3mm'})
mdb.jobs['3mm']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': '3mm'})
mdb.models['Model-1'].parts['Part-qiu'].setElementType(elemTypes=(ElemType(
    elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD)), 
    regions=(mdb.models['Model-1'].parts['Part-qiu'].cells.getSequenceFromMask(
    ('[#f ]', ), ), ))
mdb.models['Model-1'].parts['ban'].setElementType(elemTypes=(ElemType(
    elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD)), 
    regions=(mdb.models['Model-1'].parts['ban'].cells.getSequenceFromMask((
    '[#1 ]', ), ), ))
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['3mm'].submit(consistencyChecking=OFF)
mdb.jobs['3mm']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 0, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'ELEMENT TYPE C3D20R IS NOT AVAILABLE IN Abaqus/Explicit', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'ELEMENT TYPE C3D20R IS NOT AVAILABLE IN Abaqus/Explicit', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '5 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST NFORCSO IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST NFORCSO IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SF IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SF IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'SIDE LABEL S6 CANNOT BE USED WITH ELEMENT TYPE C3D20R', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'SIDE LABEL S2 CANNOT BE USED WITH ELEMENT TYPE C3D20R', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'SIDE LABEL S3 CANNOT BE USED WITH ELEMENT TYPE C3D20R', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'SIDE LABEL S4 CANNOT BE USED WITH ELEMENT TYPE C3D20R', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'BOUNDARY CONDITIONS ON DEGREES OF FREEDOM CONSTRAINED BY A TYPE BOUNDARY CONDITION ARE BEING REDEFINED ON AN INDIVIDUAL DEGREE OF FREEDOM BASIS', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'CONTACT PAIR REFERENCES SURFACE/NODE-BASED SURFACE/ANALYTICAL RIGID SURFACE ASSEMBLY_BAN-1_SURF-1 BUT THIS SURFACE/NODE-BASED SURFACE/ANALYTICAL RIGID SURFACE CANNOT BE USED WITH *CONTACT PAIR. CHECK PREVIOUS WARNING MESSAGES FOR THIS SURFACE TO FIND THE CAUSE.', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'CONTACT PAIR REFERENCES SURFACE/NODE-BASED SURFACE/ANALYTICAL RIGID SURFACE ASSEMBLY_SURF-QIU BUT THIS SURFACE/NODE-BASED SURFACE/ANALYTICAL RIGID SURFACE CANNOT BE USED WITH *CONTACT PAIR. CHECK PREVIOUS WARNING MESSAGES FOR THIS SURFACE TO FIND THE CAUSE.', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'E:\\101-WorkShop\\simulation\\Abaqus\\hit\\result_data\\3mm.odb', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': '3mm'})
mdb.jobs['3mm']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': '3mm'})
mdb.models['Model-1'].parts['ban'].setElementType(elemTypes=(ElemType(
    elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD)), 
    regions=(mdb.models['Model-1'].parts['ban'].cells.getSequenceFromMask((
    '[#1 ]', ), ), ))
mdb.models['Model-1'].parts['Part-qiu'].setElementType(elemTypes=(ElemType(
    elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD)), 
    regions=(mdb.models['Model-1'].parts['Part-qiu'].cells.getSequenceFromMask(
    ('[#f ]', ), ), ))
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].parts['Part-qiu'].setElementType(elemTypes=(ElemType(
    elemCode=C3D8R, elemLibrary=EXPLICIT, secondOrderAccuracy=OFF, 
    kinematicSplit=AVERAGE_STRAIN, hourglassControl=DEFAULT, 
    distortionControl=DEFAULT), ElemType(elemCode=C3D6, elemLibrary=EXPLICIT, 
    secondOrderAccuracy=OFF, distortionControl=DEFAULT), ElemType(
    elemCode=C3D4, elemLibrary=EXPLICIT, secondOrderAccuracy=OFF, 
    distortionControl=DEFAULT)), regions=(
    mdb.models['Model-1'].parts['Part-qiu'].cells.getSequenceFromMask(('[#f ]', 
    ), ), ))
mdb.models['Model-1'].parts['ban'].setElementType(elemTypes=(ElemType(
    elemCode=C3D8R, elemLibrary=EXPLICIT, secondOrderAccuracy=OFF, 
    kinematicSplit=AVERAGE_STRAIN, hourglassControl=DEFAULT, 
    distortionControl=DEFAULT), ElemType(elemCode=C3D6, elemLibrary=EXPLICIT, 
    secondOrderAccuracy=OFF, distortionControl=DEFAULT), ElemType(
    elemCode=C3D4, elemLibrary=EXPLICIT)), regions=(
    mdb.models['Model-1'].parts['ban'].cells.getSequenceFromMask(('[#1 ]', ), 
    ), ))
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['3mm'].submit(consistencyChecking=OFF)
mdb.jobs['3mm']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 0, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST NFORCSO IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST NFORCSO IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'BOUNDARY CONDITIONS ON DEGREES OF FREEDOM CONSTRAINED BY A TYPE BOUNDARY CONDITION ARE BEING REDEFINED ON AN INDIVIDUAL DEGREE OF FREEDOM BASIS', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 13608, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 6 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 8108, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.22340457764381e-08, 'stepTime': 0.0, 
    'totalEnergy': 11.0380373001099, 'cpuTime': 0.100000001490116, 
    'jobName': '3mm', 'step': 1, 'increment': 0, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 11.0380373001099})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'THE ANALYSIS MAY NEED A LARGE NUMBER OF INCREMENTS (MORE THAN 20,000,000), AND IT MAY BE AFFECTED BY ROUND-OFF ERRORS. FOR ACCURACY, RUNNING DOUBLE PRECISION EXECUTABLE IS REQUIRED.', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'Mechanical penalty contact between surfaces ASSEMBLY_BAN-1_SURF-1 and ASSEMBLY_SURF-QIU is causing a 99.999% reduction in the time increment.', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 1.22340564345791e-08, 
    'stableTimeIncrement': 9.9999998245167e-15, 
    'stepTime': 1.22340564345791e-08, 'totalEnergy': 11.0380373001099, 
    'cpuTime': 0.100000001490116, 'jobName': '3mm', 'step': 1, 'increment': 2, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 11.0380373001099})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(ABORTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis failed due to Errors', 'jobName': '3mm'})
mdb.jobs['3mm']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': '3mm'})
mdb.models['Model-1'].steps['Step-1'].setValues(scaleFactor=1.0)
mdb.jobs['3mm'].submit(consistencyChecking=OFF)
mdb.jobs['3mm']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 0, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST NFORCSO IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST NFORCSO IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'BOUNDARY CONDITIONS ON DEGREES OF FREEDOM CONSTRAINED BY A TYPE BOUNDARY CONDITION ARE BEING REDEFINED ON AN INDIVIDUAL DEGREE OF FREEDOM BASIS', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 7756, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 6 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 13304, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.2234045243531e-07, 'stepTime': 0.0, 
    'totalEnergy': 11.0380373001099, 'cpuTime': 0.0, 'jobName': '3mm', 
    'step': 1, 'increment': 0, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 11.0380373001099})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'Master surface ASSEMBLY_BAN-1_SURF-1 of contact pair # 1 contains facets with out-of-plane warping of at least 20.000 degrees in increment 7340. Large warping that develops during an analysis often corresponds to severe distortion of the underlying elements. It may be appropriate to rerun the analysis with a refined mesh.', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'Master surface ASSEMBLY_SURF-QIU of contact pair # 1 contains facets with out-of-plane warping of at least 20.000 degrees in increment 10920. Large warping that develops during an analysis often corresponds to severe distortion of the underlying elements. It may be appropriate to rerun the analysis with a refined mesh.', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The ratio of deformation speed to wave speed in the elements in element set WarnElemDeformRateExceedsRatio-Step1 exceed the warning ratio.  Refer to the status file for further details. This message is printed during the first applicable increment, but will not be printed during subsequent increments for the remainder of the step.', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.015937402844429, 
    'stableTimeIncrement': 1.13061581430429e-07, 'stepTime': 0.015937402844429, 
    'totalEnergy': 1891.68542480469, 'cpuTime': 120.0, 'jobName': '3mm', 
    'step': 1, 'increment': 138309, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1143.47180175781})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.0316547155380249, 
    'stableTimeIncrement': 1.1310234526718e-07, 'stepTime': 0.0316547155380249, 
    'totalEnergy': 1891.66271972656, 'cpuTime': 240.0, 'jobName': '3mm', 
    'step': 1, 'increment': 276699, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1143.44360351563})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.0467111840844154, 
    'stableTimeIncrement': 1.13026288772744e-07, 
    'stepTime': 0.0467111840844154, 'totalEnergy': 1891.66186523438, 
    'cpuTime': 360.0, 'jobName': '3mm', 'step': 1, 'increment': 411422, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 1143.44189453125})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.0500000193715096, 
    'stableTimeIncrement': 1.13026473513855e-07, 
    'stepTime': 0.0500000193715096, 'totalEnergy': 1891.66174316406, 
    'cpuTime': 386.0, 'jobName': '3mm', 'step': 1, 'increment': 440850, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 1143.44653320313})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.0650067552924156, 
    'stableTimeIncrement': 1.13024306358511e-07, 
    'stepTime': 0.0650067552924156, 'totalEnergy': 1891.68115234375, 
    'cpuTime': 506.0, 'jobName': '3mm', 'step': 1, 'increment': 575128, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 1143.4375})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.0800123736262321, 
    'stableTimeIncrement': 1.13026722203813e-07, 
    'stepTime': 0.0800123736262321, 'totalEnergy': 1891.67993164063, 
    'cpuTime': 626.0, 'jobName': '3mm', 'step': 1, 'increment': 709396, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 1143.43823242188})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.0948728173971176, 
    'stableTimeIncrement': 1.13027930126464e-07, 
    'stepTime': 0.0948728173971176, 'totalEnergy': 1891.69421386719, 
    'cpuTime': 746.0, 'jobName': '3mm', 'step': 1, 'increment': 842365, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 1143.42126464844})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.100000083446503, 
    'stableTimeIncrement': 1.13029543058474e-07, 'stepTime': 0.100000083446503, 
    'totalEnergy': 1891.69372558594, 'cpuTime': 787.900024414063, 
    'jobName': '3mm', 'step': 1, 'increment': 888243, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1143.41711425781})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.114494517445564, 
    'stableTimeIncrement': 1.13028306714114e-07, 'stepTime': 0.114494517445564, 
    'totalEnergy': 1891.64929199219, 'cpuTime': 907.900024414063, 
    'jobName': '3mm', 'step': 1, 'increment': 1017937, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1143.3955078125})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.129148185253143, 
    'stableTimeIncrement': 1.13027851966763e-07, 'stepTime': 0.129148185253143, 
    'totalEnergy': 1891.62390136719, 'cpuTime': 1027.90002441406, 
    'jobName': '3mm', 'step': 1, 'increment': 1146736, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1143.38806152344})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.144388139247894, 
    'stableTimeIncrement': 1.13030289128346e-07, 'stepTime': 0.144388139247894, 
    'totalEnergy': 1891.59155273438, 'cpuTime': 1147.90002441406, 
    'jobName': '3mm', 'step': 1, 'increment': 1274578, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1143.37683105469})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.150000035762787, 
    'stableTimeIncrement': 1.13031155990484e-07, 'stepTime': 0.150000035762787, 
    'totalEnergy': 1891.58459472656, 'cpuTime': 1192.0, 'jobName': '3mm', 
    'step': 1, 'increment': 1321654, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1143.37768554688})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.165242254734039, 
    'stableTimeIncrement': 1.13033792104034e-07, 'stepTime': 0.165242254734039, 
    'totalEnergy': 1891.53576660156, 'cpuTime': 1312.0, 'jobName': '3mm', 
    'step': 1, 'increment': 1449515, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1143.36376953125})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.180566132068634, 
    'stableTimeIncrement': 1.1305031222264e-07, 'stepTime': 0.180566132068634, 
    'totalEnergy': 1891.50012207031, 'cpuTime': 1432.0, 'jobName': '3mm', 
    'step': 1, 'increment': 1578061, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1143.35852050781})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.195989906787872, 
    'stableTimeIncrement': 1.13057403439143e-07, 'stepTime': 0.195989906787872, 
    'totalEnergy': 1891.45520019531, 'cpuTime': 1552.0, 'jobName': '3mm', 
    'step': 1, 'increment': 1707445, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1143.35498046875})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.200000107288361, 
    'stableTimeIncrement': 1.13058007400468e-07, 'stepTime': 0.200000107288361, 
    'totalEnergy': 1891.43896484375, 'cpuTime': 1583.19995117188, 
    'jobName': '3mm', 'step': 1, 'increment': 1741085, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1143.35620117188})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.215377032756805, 
    'stableTimeIncrement': 1.13060494300044e-07, 'stepTime': 0.215377032756805, 
    'totalEnergy': 1891.38623046875, 'cpuTime': 1703.09997558594, 
    'jobName': '3mm', 'step': 1, 'increment': 1870076, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1143.34826660156})
# Save by XLH on 2020_01_11-17.11.15; build 2016 2015_09_25-04.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.230677783489227, 
    'stableTimeIncrement': 1.13062796458507e-07, 'stepTime': 0.230677783489227, 
    'totalEnergy': 1891.33581542969, 'cpuTime': 1823.09997558594, 
    'jobName': '3mm', 'step': 1, 'increment': 1998428, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1143.34802246094})
mdb.jobs['3mm']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'Mechanical penalty contact between surfaces ASSEMBLY_BAN-1_SURF-1 and ASSEMBLY_SURF-QIU is causing a 50.366% reduction in the time increment.', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'The ratio of deformation speed to wave speed exceeds 1.0000 in at least one element. This usually indicates an error with the model definition. Additional diagnostic information may be found in the message file.', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.232706129550934, 
    'stableTimeIncrement': 9.9999998245167e-15, 'stepTime': 0.232706129550934, 
    'totalEnergy': 1923.19958496094, 'cpuTime': 1839.0, 'jobName': '3mm', 
    'step': 1, 'increment': 2015449, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1149.7021484375})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(ABORTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis failed due to Errors', 'jobName': '3mm'})
mdb.jobs['3mm']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': '3mm'})
mdb.models['Model-1'].steps['Step-1'].setValues(timePeriod=0.05)
mdb.jobs['3mm'].submit(consistencyChecking=OFF)
mdb.jobs['3mm']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 0, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST NFORCSO IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST NFORCSO IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'BOUNDARY CONDITIONS ON DEGREES OF FREEDOM CONSTRAINED BY A TYPE BOUNDARY CONDITION ARE BEING REDEFINED ON AN INDIVIDUAL DEGREE OF FREEDOM BASIS', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '3mm'})
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['ban'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['ban'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=mdb.models['Model-1'].parts['ban'].features['Solid extrude-1'])
mdb.jobs['3mm']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 8880, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 6 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 13680, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.2234045243531e-07, 'stepTime': 0.0, 
    'totalEnergy': 11.0380373001099, 'cpuTime': 0.0, 'jobName': '3mm', 
    'step': 1, 'increment': 0, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 11.0380373001099})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '3mm'})
del mdb.models['Model-1'].sketches['__edit__']
mdb.jobs['3mm']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'Master surface ASSEMBLY_BAN-1_SURF-1 of contact pair # 1 contains facets with out-of-plane warping of at least 20.000 degrees in increment 7340. Large warping that develops during an analysis often corresponds to severe distortion of the underlying elements. It may be appropriate to rerun the analysis with a refined mesh.', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'Master surface ASSEMBLY_SURF-QIU of contact pair # 1 contains facets with out-of-plane warping of at least 20.000 degrees in increment 10920. Large warping that develops during an analysis often corresponds to severe distortion of the underlying elements. It may be appropriate to rerun the analysis with a refined mesh.', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The ratio of deformation speed to wave speed in the elements in element set WarnElemDeformRateExceedsRatio-Step1 exceed the warning ratio.  Refer to the status file for further details. This message is printed during the first applicable increment, but will not be printed during subsequent increments for the remainder of the step.', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.00250003300607204, 
    'stableTimeIncrement': 1.1299354696348e-07, 
    'stepTime': 0.00250003300607204, 'totalEnergy': 1916.41821289063, 
    'cpuTime': 17.0, 'jobName': '3mm', 'step': 1, 'increment': 19281, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 1180.28723144531})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.00500011024996638, 
    'stableTimeIncrement': 1.13083892472332e-07, 
    'stepTime': 0.00500011024996638, 'totalEnergy': 1893.978515625, 
    'cpuTime': 36.2999992370605, 'jobName': '3mm', 'step': 1, 
    'increment': 41378, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1145.20593261719})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.00750005897134542, 
    'stableTimeIncrement': 1.13072054830354e-07, 
    'stepTime': 0.00750005897134542, 'totalEnergy': 1892.24450683594, 
    'cpuTime': 55.7000007629395, 'jobName': '3mm', 'step': 1, 
    'increment': 63471, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1143.876953125})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.0100000211969018, 
    'stableTimeIncrement': 1.130880917799e-07, 'stepTime': 0.0100000211969018, 
    'totalEnergy': 1891.84118652344, 'cpuTime': 75.0, 'jobName': '3mm', 
    'step': 1, 'increment': 85644, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1143.58557128906})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.012500049546361, 
    'stableTimeIncrement': 1.13075053320699e-07, 'stepTime': 0.012500049546361, 
    'totalEnergy': 1891.72790527344, 'cpuTime': 94.4000015258789, 
    'jobName': '3mm', 'step': 1, 'increment': 107829, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1143.55334472656})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.0150000778958201, 
    'stableTimeIncrement': 1.13058085560169e-07, 
    'stepTime': 0.0150000778958201, 'totalEnergy': 1891.69165039063, 
    'cpuTime': 113.599998474121, 'jobName': '3mm', 'step': 1, 
    'increment': 130014, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1143.474609375})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.0175000373274088, 
    'stableTimeIncrement': 1.13086940700668e-07, 
    'stepTime': 0.0175000373274088, 'totalEnergy': 1891.67541503906, 
    'cpuTime': 132.600006103516, 'jobName': '3mm', 'step': 1, 
    'increment': 152062, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1143.45654296875})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.020000047981739, 
    'stableTimeIncrement': 1.13067635254538e-07, 'stepTime': 0.020000047981739, 
    'totalEnergy': 1891.66613769531, 'cpuTime': 151.600006103516, 
    'jobName': '3mm', 'step': 1, 'increment': 174065, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1143.46154785156})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.0225000586360693, 
    'stableTimeIncrement': 1.13138476365293e-07, 
    'stepTime': 0.0225000586360693, 'totalEnergy': 1891.6669921875, 
    'cpuTime': 170.600006103516, 'jobName': '3mm', 'step': 1, 
    'increment': 196068, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1143.47485351563})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.0250000692903996, 
    'stableTimeIncrement': 1.13117764044546e-07, 
    'stepTime': 0.0250000692903996, 'totalEnergy': 1891.6640625, 
    'cpuTime': 189.600006103516, 'jobName': '3mm', 'step': 1, 
    'increment': 218071, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1143.46313476563})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.0275000799447298, 
    'stableTimeIncrement': 1.13146455760216e-07, 
    'stepTime': 0.0275000799447298, 'totalEnergy': 1891.66271972656, 
    'cpuTime': 208.600006103516, 'jobName': '3mm', 'step': 1, 
    'increment': 240074, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1143.45751953125})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 11, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.0300000905990601, 
    'stableTimeIncrement': 1.1313662895418e-07, 'stepTime': 0.0300000905990601, 
    'totalEnergy': 1891.66101074219, 'cpuTime': 227.600006103516, 
    'jobName': '3mm', 'step': 1, 'increment': 262077, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1143.4638671875})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 12, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.0325000584125519, 
    'stableTimeIncrement': 1.13099808629613e-07, 
    'stepTime': 0.0325000584125519, 'totalEnergy': 1891.66174316406, 
    'cpuTime': 246.899993896484, 'jobName': '3mm', 'step': 1, 
    'increment': 284263, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1143.46435546875})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 13, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.0350001007318497, 
    'stableTimeIncrement': 1.13055754979996e-07, 
    'stepTime': 0.0350001007318497, 'totalEnergy': 1891.66271972656, 
    'cpuTime': 266.200012207031, 'jobName': '3mm', 'step': 1, 
    'increment': 306633, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1143.44543457031})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 14, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.0375000312924385, 
    'stableTimeIncrement': 1.13026537462702e-07, 
    'stepTime': 0.0375000312924385, 'totalEnergy': 1891.66040039063, 
    'cpuTime': 285.799987792969, 'jobName': '3mm', 'step': 1, 
    'increment': 329002, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1143.45617675781})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 15, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.0400000736117363, 
    'stableTimeIncrement': 1.13025947712231e-07, 
    'stepTime': 0.0400000736117363, 'totalEnergy': 1891.66223144531, 
    'cpuTime': 305.299987792969, 'jobName': '3mm', 'step': 1, 
    'increment': 351372, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1143.44665527344})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 16, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.0425000041723251, 
    'stableTimeIncrement': 1.13026047188214e-07, 
    'stepTime': 0.0425000041723251, 'totalEnergy': 1891.6640625, 
    'cpuTime': 324.899993896484, 'jobName': '3mm', 'step': 1, 
    'increment': 373741, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1143.447265625})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 17, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.0450000464916229, 
    'stableTimeIncrement': 1.13026231929325e-07, 
    'stepTime': 0.0450000464916229, 'totalEnergy': 1891.66284179688, 
    'cpuTime': 344.5, 'jobName': '3mm', 'step': 1, 'increment': 396111, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 1143.44689941406})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 18, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.0475000888109207, 
    'stableTimeIncrement': 1.1302635272159e-07, 'stepTime': 0.0475000888109207, 
    'totalEnergy': 1891.65954589844, 'cpuTime': 364.200012207031, 
    'jobName': '3mm', 'step': 1, 'increment': 418481, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1143.43957519531})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 19, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.0500000007450581, 
    'stableTimeIncrement': 1.13026473513855e-07, 
    'stepTime': 0.0500000007450581, 'totalEnergy': 1891.66174316406, 
    'cpuTime': 383.799987792969, 'jobName': '3mm', 'step': 1, 
    'increment': 440850, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1143.44653320313})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 20, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(COMPLETED, {'phase': EXPLICIT_PHASE, 
    'message': 'Phase complete', 'jobName': '3mm'})
mdb.jobs['3mm']._Message(JOB_COMPLETED, {'time': 'Sat Jan 11 17:21:19 2020', 
    'jobName': '3mm'})
mdb.models['Model-1'].parts['Part-qiu'].deleteMesh(regions=
    mdb.models['Model-1'].parts['Part-qiu'].cells.getSequenceFromMask(('[#f ]', 
    ), ))
mdb.models['Model-1'].parts['Part-qiu'].seedEdgeByNumber(constraint=FINER, 
    edges=mdb.models['Model-1'].parts['Part-qiu'].edges.getSequenceFromMask((
    '[#1910 ]', ), ), number=20)
mdb.models['Model-1'].parts['Part-qiu'].generateMesh()
mdb.models['Model-1'].parts['ban'].deleteMesh(regions=
    mdb.models['Model-1'].parts['ban'].cells.getSequenceFromMask(('[#1 ]', ), 
    ))
mdb.models['Model-1'].parts['ban'].seedEdgeByNumber(constraint=FINER, edges=
    mdb.models['Model-1'].parts['ban'].edges.getSequenceFromMask(('[#50 ]', ), 
    ), number=50)
mdb.models['Model-1'].parts['ban'].seedEdgeByNumber(constraint=FINER, edges=
    mdb.models['Model-1'].parts['ban'].edges.getSequenceFromMask(('[#22 ]', ), 
    ), number=100)
mdb.models['Model-1'].parts['ban'].generateMesh()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['3mm'].submit(consistencyChecking=OFF)
mdb.jobs['3mm']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 0, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '7 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST NFORCSO IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST NFORCSO IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'BOUNDARY CONDITIONS ON DEGREES OF FREEDOM CONSTRAINED BY A TYPE BOUNDARY CONDITION ARE BEING REDEFINED ON AN INDIVIDUAL DEGREE OF FREEDOM BASIS', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 1336, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 7 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-GDPPV8K', 'handle': 2684, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.07079685562894e-07, 'stepTime': 0.0, 
    'totalEnergy': 11.2589302062988, 'cpuTime': 0.100000001490116, 
    'jobName': '3mm', 'step': 1, 'increment': 0, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 11.2589302062988})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'Master surface ASSEMBLY_BAN-1_SURF-1 of contact pair # 1 contains facets with out-of-plane warping of at least 20.000 degrees in increment 2620. Large warping that develops during an analysis often corresponds to severe distortion of the underlying elements. It may be appropriate to rerun the analysis with a refined mesh.', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'Master surface ASSEMBLY_SURF-QIU of contact pair # 1 contains facets with out-of-plane warping of at least 20.000 degrees in increment 3520. Large warping that develops during an analysis often corresponds to severe distortion of the underlying elements. It may be appropriate to rerun the analysis with a refined mesh.', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The ratio of deformation speed to wave speed in the elements in element set WarnElemDeformRateExceedsRatio-Step1 exceed the warning ratio.  Refer to the status file for further details. This message is printed during the first applicable increment, but will not be printed during subsequent increments for the remainder of the step.', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'The elements contained in element set ErrElemExcessDistortion-Step1 have distorted excessively.', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'There is only one excessively distorted element', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'The ratio of deformation speed to wave speed exceeds 1.0000 in at least one element. This usually indicates an error with the model definition. Additional diagnostic information may be found in the message file.', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'Mechanical penalty contact between surfaces ASSEMBLY_BAN-1_SURF-1 and ASSEMBLY_SURF-QIU is causing a 99.999% reduction in the time increment.', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(STATUS, {'totalTime': 0.000612317933700979, 
    'stableTimeIncrement': 9.9999998245167e-15, 
    'stepTime': 0.000612317933700979, 'totalEnergy': -678.062744140625, 
    'cpuTime': 18.5, 'jobName': '3mm', 'step': 1, 'increment': 4569, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 1783.47766113281})
mdb.jobs['3mm']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'The elements contained in element set ErrElemExcessDistortion-Step1 have distorted excessively.', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '3mm'})
mdb.jobs['3mm']._Message(ABORTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis failed due to Errors', 'jobName': '3mm'})
mdb.jobs['3mm']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': '3mm'})
mdb.jobs['3mm']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': '3mm'})
# Save by XLH on 2020_01_11-23.34.26; build 2016 2015_09_25-04.31.09 126547
